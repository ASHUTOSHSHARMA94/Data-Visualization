<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top 20 Laptops' datatype='integer' name='[Configuration (Laptops) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='20'>
        <calculation class='tableau' formula='20' />
        <range max='20' min='1' />
      </column>
    </datasource>
    <datasource caption='POS+ (Multiple Connections)' inline='true' name='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='POS' name='excel-direct.1aur13y0ub78e41dfyg7x0xfvzf1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LENOVO/Downloads/PRAXIS STUDY MATERIAL/Tableau/Tableau Case studies/Tableau case study - Laptops/POS.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Laptops' name='excel-direct.1vkaq5a170dpo418htzmd0cyhwvj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LENOVO/Downloads/PRAXIS STUDY MATERIAL/Tableau/Tableau Case studies/Tableau case study - Laptops/Laptops.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Store_Locations' name='excel-direct.1sg6a151vci11t10e1xgc1bdkizj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LENOVO/Downloads/PRAXIS STUDY MATERIAL/Tableau/Tableau Case studies/Tableau case study - Laptops/Store_Locations.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='London_postal_codes' name='excel-direct.1c6q7230jh1ylk111oixx1fe7igp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LENOVO/Downloads/PRAXIS STUDY MATERIAL/Tableau/Tableau Case studies/Tableau case study - Laptops/London_postal_codes.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Store_Locations].[Store Postcode]' />
              <expression op='[London_postal_codes].[Postcode]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[POS].[Store Postcode]' />
                <expression op='[Store_Locations].[Store Postcode]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[POS].[Configuration]' />
                  <expression op='[Laptops].[Configuration]' />
                </expression>
              </clause>
              <relation connection='excel-direct.1aur13y0ub78e41dfyg7x0xfvzf1' name='POS' table='[POS$]' type='table'>
                <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Configuration' ordinal='1' />
                  <column datatype='integer' name='C OSx' ordinal='2' />
                  <column datatype='integer' name='C OSy' ordinal='3' />
                  <column datatype='string' name='Store Postcode' ordinal='4' />
                  <column datatype='integer' name='Retail Price' ordinal='5' />
                </columns>
              </relation>
              <relation connection='excel-direct.1vkaq5a170dpo418htzmd0cyhwvj' name='Laptops' table='[Laptops$]' type='table'>
                <columns gridOrigin='A1:F865:no:A1:F865:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Configuration' ordinal='0' />
                  <column datatype='integer' name='Screen Size (Inches)' ordinal='1' />
                  <column datatype='integer' name='Battery Life (Hours)' ordinal='2' />
                  <column datatype='integer' name='RAM (GB)' ordinal='3' />
                  <column datatype='real' name='Processor Speeds (GHz)' ordinal='4' />
                  <column datatype='integer' name='HD Size (GB)' ordinal='5' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.1sg6a151vci11t10e1xgc1bdkizj' name='Store_Locations' table='[Store_Locations$]' type='table'>
              <columns gridOrigin='A1:C16:no:A1:C16:0' header='yes' outcome='6'>
                <column datatype='string' name='Store Postcode' ordinal='0' />
                <column datatype='integer' name='St OS X' ordinal='1' />
                <column datatype='integer' name='St OS Y' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1c6q7230jh1ylk111oixx1fe7igp' name='London_postal_codes' table='[London_postal_codes$]' type='table'>
            <columns gridOrigin='A1:C835:no:A1:C835:0' header='yes' outcome='6'>
              <column datatype='string' name='Postcode' ordinal='0' />
              <column datatype='integer' name='OS X' ordinal='1' />
              <column datatype='integer' name='OS Y' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Battery Life (Hours)]' value='[Laptops].[Battery Life (Hours)]' />
          <map key='[C OSx]' value='[POS].[C OSx]' />
          <map key='[C OSy]' value='[POS].[C OSy]' />
          <map key='[Configuration (Laptops)]' value='[Laptops].[Configuration]' />
          <map key='[Configuration]' value='[POS].[Configuration]' />
          <map key='[Date]' value='[POS].[Date]' />
          <map key='[HD Size (GB)]' value='[Laptops].[HD Size (GB)]' />
          <map key='[OS X]' value='[London_postal_codes].[OS X]' />
          <map key='[OS Y]' value='[London_postal_codes].[OS Y]' />
          <map key='[Postcode]' value='[London_postal_codes].[Postcode]' />
          <map key='[Processor Speeds (GHz)]' value='[Laptops].[Processor Speeds (GHz)]' />
          <map key='[RAM (GB)]' value='[Laptops].[RAM (GB)]' />
          <map key='[Retail Price]' value='[POS].[Retail Price]' />
          <map key='[Screen Size (Inches)]' value='[Laptops].[Screen Size (Inches)]' />
          <map key='[St OS X]' value='[Store_Locations].[St OS X]' />
          <map key='[St OS Y]' value='[Store_Locations].[St OS Y]' />
          <map key='[Store Postcode (Store!Locations)]' value='[Store_Locations].[Store Postcode]' />
          <map key='[Store Postcode]' value='[POS].[Store Postcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[POS]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Configuration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Configuration]</local-name>
            <parent-name>[POS]</parent-name>
            <remote-alias>Configuration</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C OSx</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C OSx]</local-name>
            <parent-name>[POS]</parent-name>
            <remote-alias>C OSx</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C OSy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C OSy]</local-name>
            <parent-name>[POS]</parent-name>
            <remote-alias>C OSy</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store Postcode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Store Postcode]</local-name>
            <parent-name>[POS]</parent-name>
            <remote-alias>Store Postcode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Retail Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Retail Price]</local-name>
            <parent-name>[POS]</parent-name>
            <remote-alias>Retail Price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[POS]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Configuration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Configuration (Laptops)]</local-name>
            <parent-name>[Laptops]</parent-name>
            <remote-alias>Configuration</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Screen Size (Inches)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Screen Size (Inches)]</local-name>
            <parent-name>[Laptops]</parent-name>
            <remote-alias>Screen Size (Inches)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Battery Life (Hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Battery Life (Hours)]</local-name>
            <parent-name>[Laptops]</parent-name>
            <remote-alias>Battery Life (Hours)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RAM (GB)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RAM (GB)]</local-name>
            <parent-name>[Laptops]</parent-name>
            <remote-alias>RAM (GB)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Processor Speeds (GHz)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Processor Speeds (GHz)]</local-name>
            <parent-name>[Laptops]</parent-name>
            <remote-alias>Processor Speeds (GHz)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HD Size (GB)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HD Size (GB)]</local-name>
            <parent-name>[Laptops]</parent-name>
            <remote-alias>HD Size (GB)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Laptops]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F865:no:A1:F865:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store Postcode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Store Postcode (Store!Locations)]</local-name>
            <parent-name>[Store_Locations]</parent-name>
            <remote-alias>Store Postcode</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>St OS X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[St OS X]</local-name>
            <parent-name>[Store_Locations]</parent-name>
            <remote-alias>St OS X</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>St OS Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[St OS Y]</local-name>
            <parent-name>[Store_Locations]</parent-name>
            <remote-alias>St OS Y</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Store_Locations]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C16:no:A1:C16:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postcode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postcode]</local-name>
            <parent-name>[London_postal_codes]</parent-name>
            <remote-alias>Postcode</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OS X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OS X]</local-name>
            <parent-name>[London_postal_codes]</parent-name>
            <remote-alias>OS X</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OS Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OS Y]</local-name>
            <parent-name>[London_postal_codes]</parent-name>
            <remote-alias>OS Y</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[London_postal_codes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C835:no:A1:C835:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Battery Life (Hours) (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[Battery Life (Hours)]' new-bin='true'>
          <bin default-name='false' value='&quot;High Battery Life&quot;'>
            <value>6</value>
          </bin>
          <bin default-name='false' value='&quot;Low Battery Life&quot;'>
            <value>4</value>
            <value>5</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Battery Life (Hours)]' role='measure' type='quantitative' />
      <column caption='Distance' datatype='real' name='[Calculation_2215208101518913536]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SQRT(SQUARE([C OSx] - [OS X])) + SQRT(SQUARE([C OSy] - [OS Y]))' />
      </column>
      <column datatype='integer' name='[Configuration (Laptops)]' role='measure' type='quantitative' />
      <column caption='Configuration (bin)' datatype='integer' name='[Configuration (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[Configuration]' peg='0' size='27.3' />
      </column>
      <column datatype='integer' name='[Configuration]' role='measure' type='quantitative' />
      <column datatype='string' name='[HD Size (GB) (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[HD Size (GB)]' new-bin='true'>
          <bin default-name='false' value='&quot;High HD&quot;'>
            <value>120</value>
            <value>300</value>
          </bin>
          <bin default-name='false' value='&quot;Low HD&quot;'>
            <value>40</value>
            <value>80</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[HD Size (GB)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Os X' datatype='integer' name='[OS X]' role='measure' type='quantitative' />
      <column caption='Os Y' datatype='integer' name='[OS Y]' role='measure' type='quantitative' />
      <column datatype='string' name='[Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Processor Speeds (GHz) (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[Processor Speeds (GHz)]' new-bin='true'>
          <bin default-name='false' value='&quot;High Processor&quot;'>
            <value>2.3999999999999999</value>
          </bin>
          <bin default-name='false' value='&quot;Low Processor&quot;'>
            <value>1.5</value>
            <value>2.0</value>
          </bin>
        </calculation>
      </column>
      <column datatype='real' name='[Processor Speeds (GHz)]' role='measure' type='quantitative' />
      <column caption='Ram (Gb)' datatype='integer' name='[RAM (GB)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ram (Gb) (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[RAM (GB)]' new-bin='true'>
          <bin default-name='false' value='&quot;High RAM&quot;'>
            <value>4</value>
          </bin>
          <bin default-name='false' value='&quot;Low RAM&quot;'>
            <value>1</value>
            <value>2</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Retail Price]' role='measure' type='quantitative' />
      <column datatype='string' name='[Screen Size (Inches) (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[Screen Size (Inches)]' new-bin='true'>
          <bin default-name='false' value='&quot;High Screen&quot;'>
            <value>17</value>
          </bin>
          <bin default-name='false' value='&quot;Low Screen&quot;'>
            <value>15</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Screen Size (Inches)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Store Postcode (Store!Locations)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[Calculation_2215208101518913536]' derivation='Avg' name='[avg:Calculation_2215208101518913536:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Configuration]' derivation='Count' name='[cnt:Configuration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail Price]' derivation='Count' name='[cnt:Retail Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Configuration (Laptops)]' derivation='None' name='[none:Configuration (Laptops):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Retail Price]' derivation='Sum' name='[sum:Retail Price:qk]' pivot='key' type='quantitative' />
      <group caption='Combined Configration groups' name='[Battery Life (Hours) (group), HD Size (GB) (group), Processor Speeds (GHz) (group) and 2 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Battery Life (Hours) (group)]' />
          <groupfilter function='level-members' level='[HD Size (GB) (group)]' />
          <groupfilter function='level-members' level='[Processor Speeds (GHz) (group)]' />
          <groupfilter function='level-members' level='[Ram (Gb) (group)]' />
          <groupfilter function='level-members' level='[Screen Size (Inches) (group)]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.22252' measure-ordering='alphabetic' measure-percentage='0.739946' parameter-percentage='0.0375335' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Configuration (Laptops):ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#499894'>
              <bucket>29</bucket>
            </map>
            <map to='#499894'>
              <bucket>49</bucket>
            </map>
            <map to='#499894'>
              <bucket>69</bucket>
            </map>
            <map to='#499894'>
              <bucket>89</bucket>
            </map>
            <map to='#499894'>
              <bucket>109</bucket>
            </map>
            <map to='#499894'>
              <bucket>129</bucket>
            </map>
            <map to='#499894'>
              <bucket>149</bucket>
            </map>
            <map to='#499894'>
              <bucket>169</bucket>
            </map>
            <map to='#499894'>
              <bucket>189</bucket>
            </map>
            <map to='#499894'>
              <bucket>209</bucket>
            </map>
            <map to='#499894'>
              <bucket>229</bucket>
            </map>
            <map to='#499894'>
              <bucket>249</bucket>
            </map>
            <map to='#499894'>
              <bucket>269</bucket>
            </map>
            <map to='#499894'>
              <bucket>289</bucket>
            </map>
            <map to='#499894'>
              <bucket>309</bucket>
            </map>
            <map to='#499894'>
              <bucket>329</bucket>
            </map>
            <map to='#499894'>
              <bucket>349</bucket>
            </map>
            <map to='#499894'>
              <bucket>369</bucket>
            </map>
            <map to='#499894'>
              <bucket>389</bucket>
            </map>
            <map to='#499894'>
              <bucket>409</bucket>
            </map>
            <map to='#499894'>
              <bucket>429</bucket>
            </map>
            <map to='#499894'>
              <bucket>449</bucket>
            </map>
            <map to='#499894'>
              <bucket>469</bucket>
            </map>
            <map to='#499894'>
              <bucket>489</bucket>
            </map>
            <map to='#499894'>
              <bucket>509</bucket>
            </map>
            <map to='#499894'>
              <bucket>529</bucket>
            </map>
            <map to='#499894'>
              <bucket>549</bucket>
            </map>
            <map to='#499894'>
              <bucket>569</bucket>
            </map>
            <map to='#499894'>
              <bucket>589</bucket>
            </map>
            <map to='#499894'>
              <bucket>609</bucket>
            </map>
            <map to='#499894'>
              <bucket>629</bucket>
            </map>
            <map to='#499894'>
              <bucket>649</bucket>
            </map>
            <map to='#499894'>
              <bucket>669</bucket>
            </map>
            <map to='#499894'>
              <bucket>689</bucket>
            </map>
            <map to='#499894'>
              <bucket>709</bucket>
            </map>
            <map to='#499894'>
              <bucket>729</bucket>
            </map>
            <map to='#499894'>
              <bucket>749</bucket>
            </map>
            <map to='#499894'>
              <bucket>769</bucket>
            </map>
            <map to='#499894'>
              <bucket>789</bucket>
            </map>
            <map to='#499894'>
              <bucket>809</bucket>
            </map>
            <map to='#499894'>
              <bucket>829</bucket>
            </map>
            <map to='#499894'>
              <bucket>849</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>21</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>41</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>61</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>81</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>101</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>121</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>141</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>161</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>181</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>201</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>221</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>241</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>261</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>281</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>301</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>321</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>341</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>361</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>381</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>401</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>421</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>441</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>461</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>481</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>501</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>521</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>541</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>561</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>581</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>601</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>621</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>641</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>661</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>681</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>701</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>721</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>741</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>761</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>781</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>801</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>821</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>841</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>861</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>25</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>45</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>65</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>85</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>105</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>125</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>145</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>165</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>185</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>205</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>225</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>245</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>265</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>285</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>305</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>325</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>345</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>365</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>385</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>405</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>425</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>445</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>465</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>485</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>505</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>525</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>545</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>565</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>585</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>605</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>625</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>645</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>665</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>685</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>705</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>725</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>745</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>765</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>785</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>805</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>825</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>845</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13</bucket>
            </map>
            <map to='#79706e'>
              <bucket>33</bucket>
            </map>
            <map to='#79706e'>
              <bucket>53</bucket>
            </map>
            <map to='#79706e'>
              <bucket>73</bucket>
            </map>
            <map to='#79706e'>
              <bucket>93</bucket>
            </map>
            <map to='#79706e'>
              <bucket>113</bucket>
            </map>
            <map to='#79706e'>
              <bucket>133</bucket>
            </map>
            <map to='#79706e'>
              <bucket>153</bucket>
            </map>
            <map to='#79706e'>
              <bucket>173</bucket>
            </map>
            <map to='#79706e'>
              <bucket>193</bucket>
            </map>
            <map to='#79706e'>
              <bucket>213</bucket>
            </map>
            <map to='#79706e'>
              <bucket>233</bucket>
            </map>
            <map to='#79706e'>
              <bucket>253</bucket>
            </map>
            <map to='#79706e'>
              <bucket>273</bucket>
            </map>
            <map to='#79706e'>
              <bucket>293</bucket>
            </map>
            <map to='#79706e'>
              <bucket>313</bucket>
            </map>
            <map to='#79706e'>
              <bucket>333</bucket>
            </map>
            <map to='#79706e'>
              <bucket>353</bucket>
            </map>
            <map to='#79706e'>
              <bucket>373</bucket>
            </map>
            <map to='#79706e'>
              <bucket>393</bucket>
            </map>
            <map to='#79706e'>
              <bucket>413</bucket>
            </map>
            <map to='#79706e'>
              <bucket>433</bucket>
            </map>
            <map to='#79706e'>
              <bucket>453</bucket>
            </map>
            <map to='#79706e'>
              <bucket>473</bucket>
            </map>
            <map to='#79706e'>
              <bucket>493</bucket>
            </map>
            <map to='#79706e'>
              <bucket>513</bucket>
            </map>
            <map to='#79706e'>
              <bucket>533</bucket>
            </map>
            <map to='#79706e'>
              <bucket>553</bucket>
            </map>
            <map to='#79706e'>
              <bucket>573</bucket>
            </map>
            <map to='#79706e'>
              <bucket>593</bucket>
            </map>
            <map to='#79706e'>
              <bucket>613</bucket>
            </map>
            <map to='#79706e'>
              <bucket>633</bucket>
            </map>
            <map to='#79706e'>
              <bucket>653</bucket>
            </map>
            <map to='#79706e'>
              <bucket>673</bucket>
            </map>
            <map to='#79706e'>
              <bucket>693</bucket>
            </map>
            <map to='#79706e'>
              <bucket>713</bucket>
            </map>
            <map to='#79706e'>
              <bucket>733</bucket>
            </map>
            <map to='#79706e'>
              <bucket>753</bucket>
            </map>
            <map to='#79706e'>
              <bucket>773</bucket>
            </map>
            <map to='#79706e'>
              <bucket>793</bucket>
            </map>
            <map to='#79706e'>
              <bucket>813</bucket>
            </map>
            <map to='#79706e'>
              <bucket>833</bucket>
            </map>
            <map to='#79706e'>
              <bucket>853</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>30</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>50</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>70</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>90</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>110</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>130</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>150</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>170</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>190</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>210</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>230</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>250</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>270</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>290</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>310</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>330</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>350</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>370</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>390</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>410</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>430</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>450</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>470</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>490</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>510</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>530</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>550</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>570</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>590</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>610</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>630</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>650</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>670</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>690</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>710</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>730</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>750</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>770</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>790</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>810</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>830</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>850</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>26</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>46</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>66</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>86</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>106</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>126</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>146</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>166</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>186</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>206</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>226</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>246</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>266</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>286</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>306</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>326</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>346</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>366</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>386</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>406</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>426</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>446</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>466</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>486</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>506</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>526</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>546</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>566</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>586</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>606</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>626</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>646</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>666</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>686</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>706</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>726</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>746</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>766</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>786</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>806</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>826</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>846</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>19</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>39</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>59</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>79</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>119</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>139</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>159</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>179</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>199</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>219</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>239</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>259</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>279</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>299</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>319</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>339</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>359</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>379</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>399</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>419</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>439</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>459</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>479</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>499</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>519</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>539</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>559</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>579</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>599</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>619</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>639</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>659</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>679</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>699</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>719</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>739</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>759</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>779</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>799</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>819</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>839</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>859</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>22</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>42</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>62</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>82</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>102</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>122</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>142</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>162</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>182</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>202</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>222</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>242</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>262</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>282</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>302</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>322</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>342</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>362</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>382</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>402</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>422</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>442</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>462</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>482</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>502</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>522</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>542</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>562</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>582</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>602</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>622</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>642</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>662</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>682</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>702</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>722</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>742</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>762</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>782</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>802</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>822</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>842</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>862</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>37</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>57</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>77</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>97</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>117</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>137</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>157</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>177</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>197</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>217</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>237</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>257</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>277</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>297</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>317</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>337</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>357</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>377</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>397</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>417</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>437</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>457</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>477</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>497</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>517</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>537</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>557</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>577</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>597</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>617</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>637</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>657</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>677</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>697</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>717</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>737</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>757</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>777</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>797</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>817</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>837</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>857</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>27</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>47</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>67</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>87</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>107</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>127</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>147</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>167</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>187</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>207</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>227</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>247</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>267</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>287</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>307</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>327</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>347</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>367</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>387</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>407</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>427</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>447</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>467</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>487</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>507</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>527</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>547</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>567</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>587</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>607</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>627</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>647</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>667</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>687</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>707</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>727</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>747</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>767</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>787</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>807</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>827</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>847</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>14</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>34</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>54</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>74</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>94</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>114</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>134</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>154</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>174</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>194</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>214</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>234</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>254</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>274</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>294</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>314</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>334</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>354</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>374</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>394</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>414</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>434</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>454</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>474</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>494</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>514</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>534</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>554</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>574</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>594</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>614</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>634</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>654</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>674</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>694</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>714</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>734</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>754</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>774</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>794</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>814</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>834</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>854</bucket>
            </map>
            <map to='#d37295'>
              <bucket>15</bucket>
            </map>
            <map to='#d37295'>
              <bucket>35</bucket>
            </map>
            <map to='#d37295'>
              <bucket>55</bucket>
            </map>
            <map to='#d37295'>
              <bucket>75</bucket>
            </map>
            <map to='#d37295'>
              <bucket>95</bucket>
            </map>
            <map to='#d37295'>
              <bucket>115</bucket>
            </map>
            <map to='#d37295'>
              <bucket>135</bucket>
            </map>
            <map to='#d37295'>
              <bucket>155</bucket>
            </map>
            <map to='#d37295'>
              <bucket>175</bucket>
            </map>
            <map to='#d37295'>
              <bucket>195</bucket>
            </map>
            <map to='#d37295'>
              <bucket>215</bucket>
            </map>
            <map to='#d37295'>
              <bucket>235</bucket>
            </map>
            <map to='#d37295'>
              <bucket>255</bucket>
            </map>
            <map to='#d37295'>
              <bucket>275</bucket>
            </map>
            <map to='#d37295'>
              <bucket>295</bucket>
            </map>
            <map to='#d37295'>
              <bucket>315</bucket>
            </map>
            <map to='#d37295'>
              <bucket>335</bucket>
            </map>
            <map to='#d37295'>
              <bucket>355</bucket>
            </map>
            <map to='#d37295'>
              <bucket>375</bucket>
            </map>
            <map to='#d37295'>
              <bucket>395</bucket>
            </map>
            <map to='#d37295'>
              <bucket>415</bucket>
            </map>
            <map to='#d37295'>
              <bucket>435</bucket>
            </map>
            <map to='#d37295'>
              <bucket>455</bucket>
            </map>
            <map to='#d37295'>
              <bucket>475</bucket>
            </map>
            <map to='#d37295'>
              <bucket>495</bucket>
            </map>
            <map to='#d37295'>
              <bucket>515</bucket>
            </map>
            <map to='#d37295'>
              <bucket>535</bucket>
            </map>
            <map to='#d37295'>
              <bucket>555</bucket>
            </map>
            <map to='#d37295'>
              <bucket>575</bucket>
            </map>
            <map to='#d37295'>
              <bucket>595</bucket>
            </map>
            <map to='#d37295'>
              <bucket>615</bucket>
            </map>
            <map to='#d37295'>
              <bucket>635</bucket>
            </map>
            <map to='#d37295'>
              <bucket>655</bucket>
            </map>
            <map to='#d37295'>
              <bucket>675</bucket>
            </map>
            <map to='#d37295'>
              <bucket>695</bucket>
            </map>
            <map to='#d37295'>
              <bucket>715</bucket>
            </map>
            <map to='#d37295'>
              <bucket>735</bucket>
            </map>
            <map to='#d37295'>
              <bucket>755</bucket>
            </map>
            <map to='#d37295'>
              <bucket>775</bucket>
            </map>
            <map to='#d37295'>
              <bucket>795</bucket>
            </map>
            <map to='#d37295'>
              <bucket>815</bucket>
            </map>
            <map to='#d37295'>
              <bucket>835</bucket>
            </map>
            <map to='#d37295'>
              <bucket>855</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>18</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>38</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>58</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>78</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>118</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>138</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>158</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>178</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>198</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>218</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>238</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>258</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>278</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>298</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>318</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>338</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>358</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>378</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>398</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>418</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>438</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>458</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>478</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>498</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>518</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>538</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>558</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>578</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>598</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>618</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>638</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>658</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>678</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>698</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>718</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>738</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>758</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>778</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>798</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>818</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>838</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>858</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>20</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>40</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>60</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>80</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>100</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>120</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>140</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>160</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>180</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>200</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>220</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>240</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>260</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>280</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>300</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>320</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>340</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>360</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>380</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>400</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>420</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>440</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>460</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>480</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>500</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>520</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>540</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>560</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>580</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>600</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>620</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>640</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>660</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>680</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>700</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>720</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>740</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>760</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>780</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>800</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>820</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>840</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>860</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#e15759'>
              <bucket>31</bucket>
            </map>
            <map to='#e15759'>
              <bucket>51</bucket>
            </map>
            <map to='#e15759'>
              <bucket>71</bucket>
            </map>
            <map to='#e15759'>
              <bucket>91</bucket>
            </map>
            <map to='#e15759'>
              <bucket>111</bucket>
            </map>
            <map to='#e15759'>
              <bucket>131</bucket>
            </map>
            <map to='#e15759'>
              <bucket>151</bucket>
            </map>
            <map to='#e15759'>
              <bucket>171</bucket>
            </map>
            <map to='#e15759'>
              <bucket>191</bucket>
            </map>
            <map to='#e15759'>
              <bucket>211</bucket>
            </map>
            <map to='#e15759'>
              <bucket>231</bucket>
            </map>
            <map to='#e15759'>
              <bucket>251</bucket>
            </map>
            <map to='#e15759'>
              <bucket>271</bucket>
            </map>
            <map to='#e15759'>
              <bucket>291</bucket>
            </map>
            <map to='#e15759'>
              <bucket>311</bucket>
            </map>
            <map to='#e15759'>
              <bucket>331</bucket>
            </map>
            <map to='#e15759'>
              <bucket>351</bucket>
            </map>
            <map to='#e15759'>
              <bucket>371</bucket>
            </map>
            <map to='#e15759'>
              <bucket>391</bucket>
            </map>
            <map to='#e15759'>
              <bucket>411</bucket>
            </map>
            <map to='#e15759'>
              <bucket>431</bucket>
            </map>
            <map to='#e15759'>
              <bucket>451</bucket>
            </map>
            <map to='#e15759'>
              <bucket>471</bucket>
            </map>
            <map to='#e15759'>
              <bucket>491</bucket>
            </map>
            <map to='#e15759'>
              <bucket>511</bucket>
            </map>
            <map to='#e15759'>
              <bucket>531</bucket>
            </map>
            <map to='#e15759'>
              <bucket>551</bucket>
            </map>
            <map to='#e15759'>
              <bucket>571</bucket>
            </map>
            <map to='#e15759'>
              <bucket>591</bucket>
            </map>
            <map to='#e15759'>
              <bucket>611</bucket>
            </map>
            <map to='#e15759'>
              <bucket>631</bucket>
            </map>
            <map to='#e15759'>
              <bucket>651</bucket>
            </map>
            <map to='#e15759'>
              <bucket>671</bucket>
            </map>
            <map to='#e15759'>
              <bucket>691</bucket>
            </map>
            <map to='#e15759'>
              <bucket>711</bucket>
            </map>
            <map to='#e15759'>
              <bucket>731</bucket>
            </map>
            <map to='#e15759'>
              <bucket>751</bucket>
            </map>
            <map to='#e15759'>
              <bucket>771</bucket>
            </map>
            <map to='#e15759'>
              <bucket>791</bucket>
            </map>
            <map to='#e15759'>
              <bucket>811</bucket>
            </map>
            <map to='#e15759'>
              <bucket>831</bucket>
            </map>
            <map to='#e15759'>
              <bucket>851</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>28</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>48</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>68</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>88</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>108</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>128</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>148</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>168</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>188</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>208</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>228</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>248</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>268</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>288</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>308</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>328</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>348</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>368</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>388</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>408</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>428</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>448</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>468</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>488</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>508</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>528</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>548</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>568</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>588</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>608</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>628</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>648</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>668</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>688</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>708</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>728</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>748</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>768</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>788</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>808</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>828</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>848</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>23</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>43</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>63</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>83</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>103</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>123</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>143</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>163</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>183</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>203</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>223</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>243</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>263</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>283</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>303</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>323</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>343</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>363</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>383</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>403</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>423</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>443</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>463</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>483</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>503</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>523</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>543</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>563</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>583</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>603</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>623</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>643</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>663</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>683</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>703</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>723</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>743</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>763</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>783</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>803</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>823</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>843</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>863</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>16</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>36</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>56</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>76</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>96</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>116</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>136</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>156</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>176</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>196</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>216</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>236</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>256</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>276</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>296</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>316</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>336</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>356</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>376</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>396</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>416</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>436</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>456</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>476</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>496</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>516</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>536</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>556</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>576</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>596</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>616</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>636</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>656</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>676</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>696</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>716</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>736</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>756</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>776</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>796</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>816</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>836</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>856</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>32</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>52</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>72</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>92</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>112</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>132</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>152</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>172</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>192</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>212</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>232</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>252</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>272</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>292</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>312</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>332</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>352</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>372</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>392</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>412</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>432</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>452</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>472</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>492</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>512</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>532</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>552</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>572</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>592</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>612</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>632</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>652</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>672</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>692</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>712</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>732</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>752</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>772</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>792</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>812</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>832</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>852</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>24</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>44</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>64</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>84</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>104</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>124</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>144</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>164</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>184</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>204</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>224</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>244</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>264</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>284</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>304</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>324</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>344</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>364</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>384</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>404</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>424</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>444</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>464</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>484</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>504</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>524</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>544</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>564</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>584</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>604</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>624</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>644</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>664</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>684</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>704</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>724</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>744</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>764</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>784</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>804</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>824</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>844</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>864</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Configuration:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[sum:Retail Price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Retail Price:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='15 Stores avg Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#666666' fontname='Tableau Book' fontsize='9'>Average of Retail Price for Top 20 Laptop among 15 stores</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Average of Retail Price for Top 20 Laptop consist across all the 15 stores</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='POS+ (Multiple Connections)' name='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 20 Laptops' datatype='integer' name='[Configuration (Laptops) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r'>
            <column datatype='integer' name='[Configuration (Laptops)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Retail Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Configuration (Laptops)]' derivation='None' name='[none:Configuration (Laptops):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Store Postcode]' derivation='None' name='[none:Store Postcode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):ok]'>
            <groupfilter count='[Parameters].[Configuration (Laptops) Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Retail Price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Configuration (Laptops):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk]</rows>
        <cols>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode:nk]</cols>
      </table>
      <simple-id uuid='{2430A6FB-D30D-4A3A-AA33-1BE2A5036894}' />
    </worksheet>
    <worksheet name='AVG DIST'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg DIST vs Store Avg DIST&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The overall average distance and the average distance for each store is shown in this sheet. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='POS+ (Multiple Connections)' name='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r' />
          </datasources>
          <datasource-dependencies datasource='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r'>
            <column datatype='integer' name='[C OSx]' role='measure' type='quantitative' />
            <column datatype='integer' name='[C OSy]' role='measure' type='quantitative' />
            <column caption='Distance' datatype='real' name='[Calculation_2215208101518913536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SQRT(SQUARE([C OSx] - [OS X])) + SQRT(SQUARE([C OSy] - [OS Y]))' />
            </column>
            <column caption='Os X' datatype='integer' name='[OS X]' role='measure' type='quantitative' />
            <column caption='Os Y' datatype='integer' name='[OS Y]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Calculation_2215208101518913536]' derivation='Avg' name='[avg:Calculation_2215208101518913536:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Postcode]' derivation='None' name='[none:Store Postcode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk] + [federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk])</rows>
        <cols />
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Avg. Distance: </run>
              <run bold='true'>&lt;[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields>
                        <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4700.9078494620035</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-12' y='47' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{EED69957-41A7-4CDB-B855-D22340C9AFF6}' />
    </worksheet>
    <worksheet name='AVG Price variation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 20 Laptops average price variations</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Average Price Variation on Top 20 Laptops in year 2015&#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='POS+ (Multiple Connections)' name='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r' />
          </datasources>
          <datasource-dependencies datasource='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r'>
            <column datatype='integer' name='[Configuration (Laptops)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Configuration]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Retail Price]' role='measure' type='quantitative' />
            <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Configuration (Laptops)]' derivation='None' name='[none:Configuration (Laptops):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Configuration]' derivation='None' name='[none:Configuration:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration:ok]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Retail Price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Configuration:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):ok]' />
              <text column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk]</rows>
        <cols>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{7D095648-6666-45E6-A615-FE377F255AED}' />
    </worksheet>
    <worksheet name='DIST VS Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Distance vs Sales</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>If the store is near to the customer, it will led to increase the sales of the store&#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='POS+ (Multiple Connections)' name='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r' />
          </datasources>
          <datasource-dependencies datasource='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r'>
            <column datatype='integer' name='[C OSx]' role='measure' type='quantitative' />
            <column datatype='integer' name='[C OSy]' role='measure' type='quantitative' />
            <column caption='Distance' datatype='real' name='[Calculation_2215208101518913536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SQRT(SQUARE([C OSx] - [OS X])) + SQRT(SQUARE([C OSy] - [OS Y]))' />
            </column>
            <column caption='Os X' datatype='integer' name='[OS X]' role='measure' type='quantitative' />
            <column caption='Os Y' datatype='integer' name='[OS Y]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Retail Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store Postcode (Store!Locations)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Calculation_2215208101518913536]' derivation='Avg' name='[avg:Calculation_2215208101518913536:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Postcode (Store!Locations)]' derivation='None' name='[none:Store Postcode (Store!Locations):nk]' pivot='key' type='nominal' />
            <column-instance column='[Retail Price]' derivation='Sum' name='[sum:Retail Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode (Store!Locations):nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[sum:Retail Price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='text-format' field='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[sum:Retail Price:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[:Measure Names]' />
              <text column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[sum:Retail Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[:Measure Names]' />
              <text column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[sum:Retail Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Calculation_2215208101518913536:qk] + [federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[sum:Retail Price:qk])</rows>
        <cols>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode (Store!Locations):nk]</cols>
      </table>
      <simple-id uuid='{A570181C-52A1-49CA-B889-0A2FF5EC8068}' />
    </worksheet>
    <worksheet name='Day sales'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Total Laptop sales on a Day or Date of every Month</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='POS+ (Multiple Connections)' name='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r' />
          </datasources>
          <datasource-dependencies datasource='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Count' name='[cnt:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Date:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Date:qk]</rows>
        <cols>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[dy:Date:ok]</cols>
      </table>
      <simple-id uuid='{670C7CC1-4E7B-4423-8517-247B59B36C8C}' />
    </worksheet>
    <worksheet name='Group Avg Price'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>The configuration have be grouped by highs and lows of its parameters. The average price is the highest for the configuration with every parameter as high. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='POS+ (Multiple Connections)' name='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r' />
          </datasources>
          <datasource-dependencies datasource='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r'>
            <column datatype='string' name='[Battery Life (Hours) (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[Battery Life (Hours)]' new-bin='true'>
                <bin default-name='false' value='&quot;High Battery Life&quot;'>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Low Battery Life&quot;'>
                  <value>4</value>
                  <value>5</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Battery Life (Hours)]' role='measure' type='quantitative' />
            <column datatype='string' name='[HD Size (GB) (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[HD Size (GB)]' new-bin='true'>
                <bin default-name='false' value='&quot;High HD&quot;'>
                  <value>120</value>
                  <value>300</value>
                </bin>
                <bin default-name='false' value='&quot;Low HD&quot;'>
                  <value>40</value>
                  <value>80</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[HD Size (GB)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processor Speeds (GHz) (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[Processor Speeds (GHz)]' new-bin='true'>
                <bin default-name='false' value='&quot;High Processor&quot;'>
                  <value>2.3999999999999999</value>
                </bin>
                <bin default-name='false' value='&quot;Low Processor&quot;'>
                  <value>1.5</value>
                  <value>2.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Processor Speeds (GHz)]' role='measure' type='quantitative' />
            <column caption='Ram (Gb)' datatype='integer' name='[RAM (GB)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ram (Gb) (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[RAM (GB)]' new-bin='true'>
                <bin default-name='false' value='&quot;High RAM&quot;'>
                  <value>4</value>
                </bin>
                <bin default-name='false' value='&quot;Low RAM&quot;'>
                  <value>1</value>
                  <value>2</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Retail Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Screen Size (Inches) (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[Screen Size (Inches)]' new-bin='true'>
                <bin default-name='false' value='&quot;High Screen&quot;'>
                  <value>17</value>
                </bin>
                <bin default-name='false' value='&quot;Low Screen&quot;'>
                  <value>15</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Screen Size (Inches)]' role='measure' type='quantitative' />
            <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[Battery Life (Hours) (group), HD Size (GB) (group), Processor Speeds (GHz) (group) and 2 more (Combined)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[Battery Life (Hours) (group), HD Size (GB) (group), Processor Speeds (GHz) (group) and 2 more (Combined)]</rows>
        <cols>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk]</cols>
        <show-full-range>
          <column>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[Configuration (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{1D671DC2-2BFD-4D34-8D99-ECB1D7EE3AEF}' />
    </worksheet>
    <worksheet name='Monthly sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Laptop sold in every Month</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Laptop sold every Month</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='POS+ (Multiple Connections)' name='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r' />
          </datasources>
          <datasource-dependencies datasource='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Count' name='[cnt:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Date:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Date:qk]</rows>
        <cols>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{6C2D1F3D-F888-41C8-B329-E19545807C7A}' />
    </worksheet>
    <worksheet name='Price vs sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Lower or Higher Avg Price increase Sales or not</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Lower price have higher sales, as it can beseen in the case of SW1P 3AU&#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='POS+ (Multiple Connections)' name='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r' />
          </datasources>
          <datasource-dependencies datasource='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r'>
            <column datatype='integer' name='[Configuration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Retail Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store Postcode (Store!Locations)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Configuration]' derivation='Count' name='[cnt:Configuration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Postcode (Store!Locations)]' derivation='None' name='[none:Store Postcode (Store!Locations):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode (Store!Locations):nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;E7 8NW&quot;</bucket>
              <bucket>&quot;W4 3PH&quot;</bucket>
              <bucket>&quot;SW1P 3AU&quot;</bucket>
              <bucket>&quot;N3 1DH&quot;</bucket>
              <bucket>&quot;CR7 8LE&quot;</bucket>
              <bucket>&quot;SE1 2BN&quot;</bucket>
              <bucket>&quot;W10 6HQ&quot;</bucket>
              <bucket>&quot;E2 0RY&quot;</bucket>
              <bucket>&quot;SW1V 4QQ&quot;</bucket>
              <bucket>&quot;SW18 1NN&quot;</bucket>
              <bucket>&quot;SE8 3JD&quot;</bucket>
              <bucket>&quot;NW5 2QH&quot;</bucket>
              <bucket>&quot;SW12 9HD&quot;</bucket>
              <bucket>&quot;KT2 5AU&quot;</bucket>
              <bucket>&quot;N17 6QA&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Configuration:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[:Measure Names]' />
              <text column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Configuration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[:Measure Names]' />
              <text column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Configuration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[avg:Retail Price:qk] + [federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Configuration:qk])</rows>
        <cols>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode (Store!Locations):nk]</cols>
      </table>
      <simple-id uuid='{2D1F61EB-AD6A-4FC4-B0AF-23D2E5E1B64B}' />
    </worksheet>
    <worksheet name='Top 20 Laptops'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top &lt;</run>
            <run>[Parameters].[Configuration (Laptops) Parameter]</run>
            <run>&gt; Sold in 2015</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Top 20 laptop configuration sold in the year of 2015.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='POS+ (Multiple Connections)' name='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 20 Laptops' datatype='integer' name='[Configuration (Laptops) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ngdmr80m9by2c1gu9fwt0n8wb4r'>
            <column datatype='integer' name='[Configuration (Laptops)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Retail Price]' role='measure' type='quantitative' />
            <column-instance column='[Configuration (Laptops)]' derivation='Count' name='[cnt:Configuration (Laptops):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Configuration (Laptops)]' derivation='None' name='[none:Configuration (Laptops):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):ok]'>
            <groupfilter count='[Parameters].[Configuration (Laptops) Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Retail Price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Configuration (Laptops):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Configuration (Laptops):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):ok]</rows>
        <cols>([federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[tyr:Date:ok] * [federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[cnt:Configuration (Laptops):qk])</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[sum:Configuration:ok]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{37B50030-2F40-465D-A87B-5E56C7411998}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top 20 Laptops'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Configuration (Laptops) Parameter]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):qk]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration:ok]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration:qk]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C6EAB25-068C-4263-B4BA-D5B9FC8F2BEC}' />
    </window>
    <window class='worksheet' name='AVG Price variation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):ok]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CE2680E-DD30-411D-AB4B-9EF5C3D28BB5}' />
    </window>
    <window class='worksheet' name='15 Stores avg Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (Laptops):qk]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode (Store!Locations):nk]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C52A34F-892F-47BE-ADB5-8DFA244E789A}' />
    </window>
    <window class='worksheet' name='Monthly sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[dy:Date:ok]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[qr:Date:ok]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA58F0E5-3810-4A59-B974-A5C4A20933C4}' />
    </window>
    <window class='worksheet' name='Day sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C83D03A8-DC1A-461C-9BE9-0374021F4B3F}' />
    </window>
    <window class='worksheet' name='Price vs sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[:Measure Names]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode (Store!Locations):nk]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECE344D4-2ABD-4401-A713-1F54E66DF624}' />
    </window>
    <window class='worksheet' name='Group Avg Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[Battery Life (Hours) (group), HD Size (GB) (group), Processor Speeds (GHz) (group) and 2 more (Combined)]</field>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Configuration (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BAA7809-0239-4C75-B26E-961B445E1EB8}' />
    </window>
    <window class='worksheet' name='AVG DIST'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F23F2A31-419A-4EF3-A205-722F1F2D51D7}' />
    </window>
    <window class='worksheet' maximized='true' name='DIST VS Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ngdmr80m9by2c1gu9fwt0n8wb4r].[none:Store Postcode (Store!Locations):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA4A84AD-2BBD-4EA5-88F8-22D9E8634789}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='15 Stores avg Price' width='192'>
      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
      bE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBs7UytOAuzj9jJ
      lBm/2sfqRppAKIZSzrJfrjF28x6RVhcVE+ISOVMABgeHKDVS7O+WuXXv3sF1gp1Bpq+ESWVy
      BD3SE/wq6QluUePN7QnWeTq7wMSNSSq7m6RSm9R0B0pjn61UFXd0VHqCj5Ce4BY13tyeYOjp
      7mY3m2Ng6ArpzS36rk1AvUR2v0ZP1HuW0kK0xZma4gdHRg7v9fT1vawYoEfWffGGkG+BhK1J
      AIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStnSkA
      pmGgGwamaVKr1TBME8PQqdXr5zU+IS7UmRpilmY+o+TtY9DfYCW9j9PlQ6nkqOsG/Vdv0dnh
      Oq9xCnEhzhSAkbGrPN8qkdurcmNq6qAn2B1ibDBMKrNHxCc9wa+SnuAWNd7cnmCD9PY22UyF
      K/EAy0sJGqYbpVYgmdwnMnBNeoKPkJ7gFjXe3J5gBXdHjGsBCEWi+Ap7+DvCoFcpVhuEOjzW
      SwvRJmcKQCTWeXgvFI4c3NA8hGTTX7wh5GtQYWsSAGFrEgBhaxIAYWsSAGFrEgBhaxIAYWsS
      AGFrEgBhaxIAYWsSAGFr5x6AcmGXxOoLLBwZK0TbnXMADBYT63SoJTYyxfMtLcQFOOcA6Ljc
      PoKRCI1y6XxLC3EBzjkADlSzyNNnCaLx6PmWFuICnL0Vp4nC1Ru3zrekEBdIMa002b4mXdcx
      DANVVSlV6jxa2mr9g6YJLdr6/B4nt8a6D/uAFUXhwfMUlVqL/tUTagDcm+jB7XQcjiW5mSOV
      2T+hBrz8r8loT5ieWOCwRr5YZSa5c6r5hPxuJkfiTfP5dG6Dht7iLfiK+XzrRh+aqh6OZXEj
      y06uxSbnV9S4OhClM+Q7rJHNl5lfy5xqPrGgl4nB2GEN0zT5eHbjVDWiHR6uDXUe1gD4eHa9
      9ZcoJ9RQgO/cHAA4rDO/liGbL39tjQsNAByEwEr/7KsM46DB+YsF9Oscy3nVUFXVUn/zRYzl
      balhpc45bwIdd9aVFqw1wrdyHmO5LDXOq87bVMNKHe2HP/zhD8/llU/wxcr75P7HuIJxUutJ
      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
      IGzt/wP0u8XBqUjP6AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='AVG DIST' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='AVG Price variation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DIST VS Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Day sales' width='192'>
      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
      QBgoNgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Group Avg Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAXpUlEQVR4nO3dWW9cZ57f8e85tZxaWCSLLO6rKFIbZclqy1vb6h57uj3WTHvSMQIECAL4
      LeQN5CpAXkOQqwAJAvRNgMBxu+H09FiWYk/L1i5K3HeyuBRZrL3qbE8uSpLlblESV5E8/w8g
      UGIdHv7FOr96njp8Fk0ppRDCo/RXXYAQr5IEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeJp/L07q
      ui6u66Lrki9xsG3rCt1ILfHw4UPyZZvU0jypjTxmuYjlQDab3e0ahdgz22gBFLMLSbp7jxNw
      ckynTezKOO2JCBWthqKlcbK2FqWUtADiwNvWFdrR1srK3Bhjs0vE6hPEjBCmbXL3wTjdHS27
      XaMQe2brAVCQzWyQL1aoqU+wPPOA1UKFkN/gnbffYHh4BBlcJA4Lba8GwzmOg8/n24tTC7Fr
      pJMuPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxtWxNisqkF/mVo
      jndPt3B7coPeni6sUoZ4xE+WWnpa47tdpxB7YssBUI7J/EqelsYaXOUnaugUy2XK6WWWU2He
      ebMHx3FwHAdZdE4cdFsOgFXKUyqXWFycp7npHQYHT3Hv/jB1dQliVpm1fIVEzACQ0aDiwNv2
      cOhMNks0FGBsfIrOY/1ojkk0GmEjkyNeXyfDocWhIPMBhKfJXSDhaRIA4WkSAOFpEgDhaRIA
      4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFp2wqAcm1W19ZRymVhbpaK5VAqlUA55PPF
      3a5RiD2z9dGgSrEwPc7YUoaTLTHsaAPrq2tEQjpB1yLadpxELCSjQcWhsI0JMRtMJdNglUgV
      Ipzpa6KwvkYxk2LVCfPugCEzwsShseUWwLEqpDM5RsbGGOhsZXolTSQWx9AtGiJBNtwIxzub
      pQUQh8K2J8Q8/jKlFJqmVU+mgVKgaZoEQBwK294m9ceLXvuLz++sICH2k9wGFZ4mARCeJgEQ
      niYBEJ4mARCeJgEQniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQnrb1HWJcm9GHDzD1MANdDQyN
      ztHc1kk4oIjHQqxkXdqa6vaiViF23dZHg2o+eo4dZ3h4lLWlMmXXRywWZXlhiuS8yYmz51BK
      PfkjxEG25QBomkYht4HrKuK9Z2jXFDfvDBHUK5QsP7quPbn4Xdfdi5qF2DVbDoBrl1hcSqF0
      P4X1ZcaSK9Q1thAJuCTqoiwurdLT3oxSSibEiANPtkgSnrW0tCQBEN7lOI7cBhXetb6+LgEQ
      3hWJRKQLJLxNWgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFp25oRNjw0RKZk
      c6qvjbHpJPVNbQQxaYgGSNsRulvje1GrELtuW0MhkrMTTC1naYiGOX76JOPDI5jFdUpumLcu
      vo5y3epIO10aGHGwbaMFsKhv7qJu9S6usskVy1iOS6QuQbhcIluyqI8EAWQskDjwtrVDzPz0
      OIF4M31dLUyMTdBzrA/sCrWxCKl0Hh4FQIiDbvMukFJMjz+krqWHcChEKLi1V3MZDSoOg007
      6eW1Sb799hozC4uMza3sZ01C7JtNA2DUtVEbCXHj+1u0tTTsZ01C7JtNu0D55QlWVIKEniFl
      R+lrb9zSiaULJA6DTd8E37t1nTtJl/amBi598Lf7WZMQ+2bTLtCbl35N2FxjMZkklSntZ01C
      7JtNA2CXsvSePE0kHKFiVvazJiH2zSYBUKznKqRSGZo7ujnV3bS/VQmxT54ZAKec49boAv/4
      rz+lt9ZhMpne77qE2BfPfBPs2BZz40P8z6UF7HKO1z84vt91CbEvnnkbVCmFcl0eP6DrOpqm
      benEchtUHAbP7AK5Zon5mXHWCxY+n2/LF78Qh8Uzu0CarvH9N1+RDnbQ2RDh9bcv0RqP7ndt
      Quy5Z7YAeiDMv/q3/56GoEOuUMYIBn58UCkKuQwb2TyuY7GyvEwmV8Q0TVAu5bK5X7ULsWOb
      /ibYyqWo73mN/miOueV14n2tACjlsJpaZ21tna6WGKtmlM4IzMxOE9FdfPEuWkMyHFocDpsG
      INzUT+vCn5nOBPn5qZYfH9B8RCMhbLeBSKwGe2aRqXIRrbzGmhvizd4IjuPgOI7sESYOvE0H
      w1Vyq+SIUatXyFo+EvU1ALhWjm+u3qKhuZn25loWkisEaxqIBiERC7NcUBzraJa7QOJQ2DQA
      1z7/b9xY1GitC/HOh5fpaa7d0oklAOIw2LQL9M6vP0X/4S6OUkRDgc0OE+JQ2zQATiFFyRfj
      RGcDEWNbU4eFOPA2X7ckGCM5dotr166Rypb3sSQh9s9zFu7RMAwDq1LCsmXDa3E0bdq38RtR
      LvzsDbKrCxTLJaBuH8sSYu+5rtq8BVCuzb9880eu3Z/neIfMBxBHz2Iqt3kArOwSrWd/wT+8
      M8DEfGo/6xJiX/zTzanNAxBq6MBaGefOxCqdLbLYrThaLNvh1lhykwkxlRwPp1e5/MlvySzN
      kM4ViEdlfI84Om6NLdGRqN2kBdA0Ru/fZm5+gRs3b+PINgLiiLlyZ4a/fePYs69sXzDK5V//
      krnpKfrO/5y+lq0NgxDiIFvdKDC7nOG1vubt7Q/wMmQskDiovvhujEyhzL/71WvStxHe4rqK
      f741xaVz3cAOtkjKWxqn+9oYmZilobWLACYNNUHWygG65K6ROKBmljaIGAE6EtVu/Za7QEop
      XMfi3r0HhAyDvtOnmBgewSxtUHFDvPGz86BcXNeVyfTiwPmv/+cW/e1xPvxZL7CdHWKUy4P7
      QwycOcvq9BgV08ZxXcKxevyFEiXLIRr0oZSS9wDiQClVLB5Mr/LZx+efXJvb6AKVMS2XibEJ
      Tvb3MDbygJbufnS3TPxYlOX1DDXNjWiaJi2AOFC+H17kVHeC6FNz1uUukPAEpRT/+X9c5dNf
      nOZ0z49j2+QukPCEpfU869ky/R0/3e1IAiA84f/dn+PdwU4C/p/2SiQA4sizHZdv7szwi9d7
      /uoxCYA48oZnUrTGa2iu/+vlPSUA4khTSvFPN6f4mwu9z3xcAiCOtFzRZGJxnTdOtD3zcQmA
      ONK+G5rnXF8LRvDZv/KSAIgjy3UV39yZ4ZfPePP7mARAHFnzq1lcV3G8vWHTYyQA4sj6+vY0
      l853o+ubD8mRAIgjqWzaXH+4wPuvdT/3OAmAOJLuTS7T01JPbdR47nHbCoDrOjiui1Iu5XIZ
      y7JxXReUwnFkGUXxaiml+OONKT5668Xb+259OLRyGb71LTQO0GHkebhk0dvVSm5jlVpDxzSa
      6GqWZRTFq7OeLbGyXuBUd+MLj91yADRN53j/SWYzLnqwhpC2TGotjZNPseqEeffNftkiSbxS
      V+/OcPFkKz4NbNt+7rHbagGy2Sz5PNjROjo625mdX6a2LkGj5pJM52hviAHIfACx75RSXLs3
      x3/4N+/g97/48t7GzhcupgrSWKMRidWRWl1h8MxpUBYhw6BQLG2jbCF2x/jCOpFQgM6X3NJL
      ZoSJI+W//O8f6O9o4FcX+17qeLkNKo6MXLHC0NQK7597/r3/p0kAxJFxe3yJk90JjMDL9zwk
      AOJIcJXi61sz/Opi35ZWI5EAiCNhJV1gLVvkePvWViWUAIgj4etb0/zN671/Nen9RSQA4tCz
      HZdvh+Z477WuLX+tBEAceg+mV2lvjNH0jEnvLyIBEIeaUor/+8Pkc2d9PY8EQBxquaLJwmqW
      CwPPnvT+IhIAcah9e3+OUz0JQptMen8RCYA4tJRSXL07y0cXXzzufzMSAHFoza1kMS2b7pbt
      zz/ZcgCUUhQya6RzJVzHYmxkmFzJJJfLohyT9Y3ctosRYiuu3J7m128ef+6k9xfZRgugWJqf
      ZiWdYXFynHh7F5MT4ywtLzExMozPCG27GCFeVqli8e3QPO8Odu7oPNuaEdbZ2cVsxqVka7TG
      oqz6dIqZFAU7RF/ILzPCxJ67M56kvyNOOOh74ayv59nGFkkmoyNjrJR0zp3s4uYPN6hrbKE2
      HKSvJsTUwirHO5sBmRG2VUopVlZWME2TRCJBOBymWCySy+Vobm5GKUUulyMcDrO8vExdXR21
      td7bxFwpxZ9uznD5nYGXmvX1PFtvAfQgr7313pN/N7X+tAmK7agckclkuHPnDufPn+fEiRN8
      /vnn1NXVcezYMXK5HLdu3eLcuXM4jkMgEPBkANK5MqlskcHephcf/AJyF+gA0TSNgYEBotEo
      AwMDQLUVTSaTOI7D2toa8XicpqYmVldXGRoaesUVvxpXbk9z8WQ7wS2M+9+MBOCAmZ6epru7
      G6UU2WwW0zTp7+9ncXERwzAYHx+nWCzS3d1NqeS9+deuq/h2aJ5fvt67K+fbWQdqC8bGxpic
      nKSzs5PBwUEqlQrXr1/nrbfewrIsbt68ybvvvsvIyAiJRILW1tb9Ku1AaW1txTAMNjY2SKfT
      fPLJJ2QyGdrb29F1nTfffJNgMMjCwgKDg4Ovutx9NzKXIhT005HYnc72vk2KdxyHXC7HzZs3
      +fDDD/n973/PG2+8wfXr1ykWi1y8eBHDMJicnGR9fZ2/+/jvGZpJMdjbRCjo9/Sew66rcJXC
      7zuaDbbrKlxX4SgXx1E4rsJ1XWzHpWI5lE2bimWTK5r8r28eculcD//w7sCufO99awF8Ph8/
      /PAD77//PgDNzc18//33pNNp8vk8ExMT5PN5Ll68iOM4DE2t8J/++zW6mmsJ+H3UhIPEwkGi
      4SC1kSCxiEEsUv13LBwkEgoSMfyEjQBhw7/liRGvguO6WLZLxbQfPcnVJ7tYtihWLAolk2LF
      ZmhqhWLF4kxvEwG/jqZpGH4fmq4R8PkIPv5cwIfPp+PTNQL+6t8DPh1d1/DpGj69elzAXz1G
      17Qnx/v0R5979LV/ybZdltJ5OhIxNE3Dsp0nF6hpOZi2g2U7lE2HyqMLtmTalCo2FbP698qj
      /5tlOxQrj46pWFi2i1Kg6wDVFzpNA13TMIJ+jICPUNBPMOAjXzKpr3n+ep9bsW8BKBaL+P1+
      DMNgbm6ORCLB7Ows58+fZ2pqinQ6zeDgIH/605+IxWK8934r//GzX3CisxHbcSlVLPIlk0yh
      QqFskS9WWF4vkC+nyRVNimWLQtmkYjqUKhZoEA0FiYQCxMJBasJBaiJBoqEgddGfhqcmYhAL
      B5/80Ku73Ffrdl2F9uhiUUqhqN6GU6r60Xbc6kVbsSiUqhduvmhSqlgUKzaFcrW2fMmk/OiC
      KFYsyhWLkmkTDPgwAn7Cj57gUNBPNBQgEgoQDQUJGwHaEzFsx6UlHsW0XZRSmJaD67gUStUL
      SilFxapelI6rsGznycfHLYjtVC80y3GevOrajlv96FY/Oo8+p2kQ8Pmq4fBp2I5iaT1PeyJG
      xbTRNA2/T8cI+DACPgL+6p9Q0I8R9BEK+AkZ1f+XEfSTqIsQCvqIGAECfh9hw08o4CccChD0
      +9Afhe9xMPVHofxLtu3i8+1eb2Df1wVyHIfp6WmOH9/+AKaXYVoOhbJJoWSRL5sUSia5okmh
      bJEtlMkVTfJlk3zRJFeqPu736QT8evVV9dGTOLeapbk+QigYoFixsG0H21XVj0612Q4HH1+w
      T38MEjEC1IQDhI3q5x63TpFQgHAwQCjo39Gv8ffS43A4brVbspop8HAmxaVz3USMAL5X1B0z
      TZMrV67Q1tbG4OAgjuNw9epVuru7yWQyLC4u0t3dTUNDA6VS6cndtM3IwliPuKr6amlazpOu
      SKFk8c+3puhtred4R5xoKFgNiN/3JCiPuyRifwwPD1OpVBgbG+PTTz9ldHQUTdMYHR3lk08+
      YXR0FKiuCTo7O8vHH3/83PPtWxfooNM1DSPgxwj4f/LLvJMvscLwUTM6Osrw8DDpdJrPPvuM
      iYkJbt++zfnz51leXmZ6epq33nqLP/zhD1y4cIH33ntv314EQqEQQ0ND6Lpe7fZVKk/unCml
      GB8f5/Lly1iWxcLCwgvPdzRvK2xDoVDgiy++4He/+92TsUxff/01V65cYWVlhc8//5xkMsnQ
      0BBffPEFudzRHfV64sQJOjo6+OijjwC4ceMGoVCIhYUFuru7KRQKhMNhmpubSaVS+zrm63Gv
      wu/3MzIyQk9PD19//TWBQIBUKsWxY8dwXZcrV67w8OFD0un0c88nXaCnKKX48ssvuXz5Mq7r
      UiwWuXr1KqVSid/85jd8+eWXfPDBBySTSWzb5uzZs6+65D3hOA5fffUVH3/8MUoprly5Ql9f
      H/fu3ePChQtkMhmSySRnzpzh2rVr/Pa3vyUQCOx7nclkktbW1h21PhKAp0xMTGCaJqdPn67u
      MvLHP3Ls2DH8fj/37t1jbW2Nixcvkk6nef/9949s379SqVAqlYjFYly7do1Lly7x5z//mTNn
      zpBMJllbW+Ptt9/mxo0btLW10d398mtxHjQSgEeUUly/fp2LFy8yNzeHpml89dVX9Pb2MjAw
      wO3btzl79izfffcd8Xict99+m6amnQ/GEq/WjgJQzi5zZzRJe0cnAc0iHjNYzet0ttQfugA8
      LZVK0djYeGRf4cWPdnQXKL+RRmk6gWCAtYVZFhZ0zl84j+u61U3zDql4PH6o6xcvb0ctgOu6
      aMDtu/cIBTXKJZvT51/H8Gk4joP+jN/kCXGQ7KgFyK2vML2wRGNLJyG/S6KuhoXVNbramtA0
      TQIgDjx5Eyw8TV6ihadJAISnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp+0oAEq5LC0u
      ULEdyuUyKIdCwXurlYnDa0dDIZamRikHY2Q3soQNDUPZhFuO0VQblqEQ4lDYUQuQrbh0dbQR
      1BXFTIr5dIVETDbIEIfHjlqA9cUpplZyGOEaDJ9NPBwgq9XQ194kLYA4FHYUAKUUtm3j8/tB
      KXRdw3UVuq5LAMShsCfDoR8vK7LTACildjQtcadff1DO8fgpOuw/i4NQw1+eY08Wxnp84b/q
      ADyelfaqn7SdvhjsRgAOwgvSQahBqerK04/r2LMJMbtx4exGDbCzC2e36pAaDk4N8OM1sWe/
      CHvZ/+j83Dx7ta6Y9mil580szk5y9+5d1rPFJ59Lrab2pI6XYZc3eDg2B8DI/VsUrc2PTaVW
      96SGp40M3aPyrLUBXIuNTIGlpeSe1zA3NcxG3sKtZLgzNLnlr39WDU/X8crXBl1eWiYa8jEz
      v0T38ZPMjt4Fo47OhhrCLV2sJ2fRHZPlTJn+zjiTyTzRiMHxnjYWV7J0tm1/bZ5UJk9/fz9B
      v8bQvXsEa+qpbCyxMD9H10Afi6Mz1CXqCMYaMfNpYmE/MwvLdPX0kpybxwgbNLT2UNxYobNz
      Z/vVAthWiWRyhf7eRhbnF4h3nmBybpxofQt+O0dJGQScAmUtjJlZYn5mhp7TrxOP7P7TqKwc
      +WKZ5HIarbhCJlekve8UazMPqWlswSVEZn2V1ta2Xf/eTyuWTUpLC2RUGdOySSXnmF9O0dLa
      hhGtp5hJ7ehn/8qHQug+nXwhj24XmFlKE2topjbio5DdwHIhk9kgXyiQW1piLZOmob2Xjjo/
      9x9O4jPCO/vmjsni4iLLs5OsFi2KhSJGtJ6zp46xvLKE64+RqKluyrCR2aCQL+A6FRYXFnF8
      Ufp6OlmZG6VY2Z2fBUBzPMr9e6O09XRRLhWxHcXC/DzpfJmB7maKjsHp/l4idQ28fqKN1ewu
      fvOnzE+MU0Zjfm4Wy9V47Uw/KyspTOWno6mGjadazb2kB0JglygpnbAO+UIep5IjW4blxWkK
      z2smX+b8u1Tn1imXiZH7RONNKNfFFwhREzGIRCJEIlHqGuNMPLgH/jCu6xKpiRGO1lIbMQg3
      dFDIrNMcr9lRCbXxJvr7+2nr7iXmg2hNDQHN5u7wFG0trSQa6wlG69hITlM0H7158htEo1Ea
      G+vRA2GsQp6WjpZd+ZHofoPmjg7QfTTX1+HXXNB0YrFYdaEun0FYKzM8MUM0EgV/iKixN7ea
      3XADP7/4Br0t9RTyGe4MjdPa2kRjohG0ALGaELHY3m/RGo1EaYqHMaIJYrUxXNclYESIRqK4
      uTTNO1yW8f8DkRvtzl1iGHQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Price vs sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aXBcWXbn93tL7iuQSCT2nSQIblVkFWtRVxe71T3qbodbLY3aGo+nNRqH
      ZryELX2wI2bCnnC0Izwf9WE8EQ7NjO0JaWR1zKi1uN3VUklVXazqWljF4gYQO4g9FyAzAeS+
      vfeuPyQIkiBAYkkACSJ/EYgAkC/fue9mnvfuPfd/zpWEEIIaNU4o8lE3oEaNo6TmADVONDUH
      qPFCUMpnmJ2bp1DSd3S8oRWYmZmuOUCNF4Of/uT/BaGxFFzgX/2r/51wLMHsxDALkRUikTCh
      hXlWV5a5PTiKARRjD/jozizqUTe8Ro1KcP5MD3fv3efyG2/ja2jAkpnlzpKEdu9d1gpFTp+5
      wPCtT3HbTeBqYsAGsaVQ7QlQ48VAVywEPCam5yMYhSzpkkxmJUzeMKGabbz88kXqvR56Lr5B
      d4MNgN7+S0i1MGiNF4FiPkeuqOFyOSnmskiqBaOUB9WCjIHZbEbXSmSyeZwuFzI6RY1HDpDN
      ZikWixVrUKFQwGKxVOx8NWocBAf2BFhbW8Pr9R7EqWvUqBi1OcA+KBQKrKysIIQgl8thGAYA
      Qgji8TiaplEqlYjFYhiGgRCCVCp1xK2u8Ti1KNAeEULwzjvv0NHRQW9vL3/0R3/ED37wA+rr
      67l16xbJZJJ0Ok1XVxexWAyHw4HT6eT999/nd3/3d4+6+TXW2f0TQAjmH0wwODJBqZhjeHCQ
      2eAyhWySialZjBMypy4Wizx48ICRkREkSeLVV1/deE2SJBKJBOFwmDNnzpBKpWhubiYYDNLR
      0bHxpKhx9OzaAYQwWFpZo6ujjWw8iG7z0dxYz+TkDE11ClPzKwfRzqrDZDLR3NxMIBAgkUgQ
      DAYJBoOkUil6e3s5ffo03d3d/MVf/AWnTp1CURQkSeL+/fskk8mjbn6NdXY9CRZCEI8uMT89
      T8+FAXKJBMFIHKfNQn9/O2NjMU6dbiWRSOB2uw+q3VVBIpEgnU7j8XhYXFzEYrEQi8W4ePEi
      CwsLdHV1EYlESKfTNDc34/F4SKfTOJ3Oo256jXV27wBGgZHBMRLZAqdOtRMKLWMoNjxqgdVk
      htbTl2jy2k50FOhhl0qSdMQtqfE8amHQCiOE4MfXR8gWNP7hty4ddXNqPIdaFOgAmA6vkczk
      j7oZVYUQAsMwkCQJSZIwDANZljdee/x3IcTGMZIkbby2ExuPP32fZePhMTUHqDCSJCFLYFKV
      o25KVZFMJvnRj37Eyy+/jMfjYWJiAofDQTQaRdM0vvvd7+JwOPjxj39MLpfj2rVrjIyMMDk5
      ye/93u/tyEY2m+WP//iPOX/+PE1NTYyMjKCqKtlsllwux7e//W3q6+v55JNPCIVCfPe73605
      QKXRDYNwPE06VzlZyYuAEIJAIEA4HObVV18lFAoRCARQVZX29naWl5dpaWmhra2NpqYmdF3n
      3LlzdHR07MnGG2+8QSgUwuPxEI/HGRgYIBgM4vP5eP3113nvvfewWq21leBKkytoG5PfTL7m
      BA8xDIMrV65QKBT44IMPaGtro7u7m3g8zuzsLC6XC0mSiMViTExM0NDQwMjICGfPnt2VjZde
      egld1/nkk0/wer309fWxtrbG5OQkXq+XYrFIKpUik8mQz+drk+BKM7eU4P/66W0sZpXvXxvg
      dLvvqJtUFRiGwb1792htbSWdThMKhejo6MBqtZJMJuno6CCVSlEqlchkMnR3d5NIJKirq9uV
      jaGhIRobGykWiywsLNDS0oLH4yEajdLb20sikWB+fp5sNktXV1fNASrNR/fmeBBcQZZlupo8
      vP1S11E3qcYzqM0BKszCcpKWBjeqIjO/XFvxLQ7+R7TpDytyLssb/y1K4NxT/y+N/ITSxLt7
      OmfNASrMwnKCq2dbEAI+H1086uYcOUZsEn2mMg4gLv3m1jZWZ/Zso+YAFSYcT9PgsWMxqUTi
      aQxDIMu1FeFqpRYFqiDZfAndMPA4rVhMCoos1cKhVU7NASrIYjRJs8+FLEnIsoTHaSWWyB51
      s2o8g10PgYTQufHxxzh8zXT57YzOLmFzebEbaRLpHM19F2mptx9EW6uexWiSzoAHKK8It/nd
      RFbS9LTsPJRX43DZ/RxASDhddnKZDEtC5+IrV5gbG0WTrFx59RRjY1ECnjYMw0DTtANocvUy
      E1qlu9m7cd0tPiczoVWu9jcfccuOjkom/+i6Dlt8pwxj75H8PUyCNZpa+ogtzqBaIRpdIV8y
      MFEgvrSE4vSgKAqyLKOqJ2uOHYyl+OVXejauuyPgZXh28sT1w+NosszOihU+H0VRtuxLfR9B
      ht1/MpIJQ0vhaeui2e9lcW6O02fOYBIFFpdW6es4mY/7kqYTWUnTVP8o2aWp3kk8matFgqqY
      XTuAJEkEWh4JlNq7ujdO1d3pqFS7jh3JbBG71YT5MRWoy2EmnSuiGwayXFOHViO1KFCFCMdT
      NNY5eDwJzGJScdkttUhQFVNzgAqxuFyOAG1Og+xodLNQk0RULTUHqBBzSwk6Ak+L/9obPSws
      J46gRTV2Qs0BKoAQgmA0SZvf9dRrrf7aE6CaqTlABdB0g2S2QL3L9tRrzT4nkZX0EbSqxk54
      YQPU0WiUdDqNYRiMjo5y9epVwuEwuVyO1157DYB79+5RLBZ59dVXCYfD6LpOe3v7jm1MTEwQ
      iUSQVQtzI1+QWL3Ipx8Pk06n+fa3v43FYuHB6D2G79xgYfEsd+/cxuv18tZbb+3YRqFQ4E//
      9E/59V//df78z/+c/v5+7HY7ExMTnD9/nr6+Pm7fvs2DBw94++23GRwcJJVK8Z3vfGfH1bmF
      EPzBH/wBX//61/n8889pbGzk2rVrfPnll4TDYb7//e8jhOCTTz4hHA7za7/2a/z+7/8+v/3b
      v00gENjxtVQjh/4EEELw4YcfksvlyOfzXL9+ndXVVd555x0WF8vy4Wg0yjvvvMP4+DjxeJwv
      vvhiVzZ0XecXv/gFU1NT3Llzh76+Purr6/H5fKysrJDL5dB1Hb/fz9raGmtra3z00UdMT0/v
      2EaxWGR8fJx8Ps/o5Ax+rxOr1cq1a9ew2WwUCgUymQz37t3DaTMjWxy0t7eTTu/uafDJJ59g
      NptZXl5G13WsViunT5/m0qVLxOPx8vArGOQ73/kON27c4Nq1a1itVvL5nVeluH37NhcuXMAw
      DOrq6kgmk0QiEQzD2ChuFo1GMZvN2Gw2vvzySy5dusQB5VIdKofuAPPz84yMjJDL5bhx4wbh
      cJibN2/yta99beOL7na7+cpXvsLo6CiZTIZQKLQrGx988AHRaJTBwUG+/vWvUygUuHHjBsFg
      EL/fj81mQ1EUFhYWqK+v5xe/+AXpdJr79+/veOn+7t27ZDIZ7ty5Q0PXed78ylf4/PPPef/9
      9zl//jxutxshBF1dXQyc6mF2dg6fz0c2m93xFyeTyTA9Pc3IyAiKovBbv/VbTExMMDY2xtLS
      Eq+++iqSJHHhwgWuX7+Ooii89957XLx4EY/Hs+P+ymQyjI6OMjo6yoULF2htbWVqaop4PM6d
      O3colUqsrq4SiUS4e/cuqVSKsbExxsbGdmyjWjn0IdA777xDJpPh008/ZWpqitXVVb7//e/z
      3nvvsbJSriuqqiqfffYZDkf5rjk0NLQrG9/4xjf4pV/6JW7fvs34+DgLCwucPn2an//85/T3
      97O6uko6neaLL76gv7+fb33rWxSLRYaHh3dcg+bq1atcvnyZyclJfvS3d/Cqeb75q7/C9evX
      GRwcxG63o+s6brebQnqBu1NuViLzNDc377hinMPh4Hd+53e4f/8+ZrOZn/zkJ7S2trK0tEQu
      l2N2dhZVVclkMpRKJa5du8a7777L4OAg9fX12GxPz0m24qtf/SpXrlxBCMHCwgJ2u50333xz
      o8z78vIyfX19nDlzhtdff53GxkauXr2K1Wrd0fmrmSPJCR4aGqKzsxO3282nn35KT08PN27c
      4PTp07hcLgqFAqOjo9jtdlwuF5999hnf+9736OzsPIim7pt/9q/f47//u6/R2vB0FAjg5liQ
      W+Nh/utffeWQW3b05H/+Lyjd+1FFzmX73v+B2v3Vp/5f+ORfUvzi3+7pnHt6AqRXI3x8e4q3
      LndxayRCR1c7Rmr5idqgz+LChQsbv7/55psAfO9733vimL6+vo3fr169uqN2iVIOjApJr0x2
      pC2eBnroLkYyuPF3yZBJrCZoWP6QUmzrO3tgrcj8PJTGlp74v9L5JrLtae2UkV5GX7y5zwso
      I9d1ogTOb/la/m9/iNBy+7YhqTas3/zhvs9zFOw+H8DQmA+v0dLoxTBkHHYT2WwOWZi58mov
      Y2NR/K7WJ+XQwkCP73yC+Swk1Yzs3bpYUuGn/wPG7EcVsWP5+3+G7Ot96v/Fu3+CPv6zjb9D
      Wj2u3H9C8d1/v+25rIaZdOIHJH72h1ikR3Jey2/8IXLz0/VD9cgIxb/6p/u8gjLKhd/E7Ovf
      8rXS5LtQqMCONRYX6tf++ZYvvXByaL2QJZ/PEQoG8TX4OXfuLPcHh7GaZJLxOLLD8ZQcWhTS
      5H70G3tu5OPI/jM4/sGfbflasYLVmBVVQdlCelvaZGNJr6dViT3zXBaphAmdrGHFojyKAinK
      1jZQKieck2XpGXLsyvXXdjZeODm0anNz+fLL9PX14rBZmJqa4tTAADapyFxohb6e+j035jiy
      oDXSpkafeYwsCRqUBEt6HXVKbVGsmthzGNTtdqOYLJw5O4DHbsFsc3GqtxP5hNXED+oNtCrP
      dgCAViVKUPcfQotq7IaaFGIfGEIirPtoUeLPPbZZiRPRT9bT8ThQc4B9kBdmBBIO+fmrrs3q
      CkGt4RBaVWM31BxgH6wYLmxSARPPT/6vl5PEjRd7z7TjSM0B9kFY99GqxNjJtMcplePtOcN8
      wK2qsRtqDrAP5rXAcyNAD5EkaFJWCem1cunVRM0B9kFQa6BdXd7x8S1qlJBemwdUEzUH2AdR
      w4tfXtvx8W1KjFBtIlxV1Bxgj5SEQk5YcMuZHb+nWYkTrD0BqoqaA+yRoOanSVlBkXauQ3m4
      FmCIk7VY+BDDEGSLZW1QvmSgrWt4hBCsZXVKuiBfMsgUDISATMHYOP6gqDnAHgnpvh2tAD+O
      RSqhopMWx19Hvxc+m8ny06EkuiH4wxurTC2XS8ffXsgzFMoTz2j81XCKnw2nWFgt8uFkmsXV
      0oG2aU8OoBez3L47jFZIc/fObRYiK8RC89y6fZdssVLSp+pmXmukU116/oGPISHwKmnWjK3z
      Bl5kllMaqizhtircnMtxpcO2kRk3vlQgXTAYDhVo9ph4pdPGZzNZskXB/XD+QFMvd+0AQgim
      p2cwhEF4doGeCy+TikdYXk1z+UIXc7NLGzt2G4ZR/hEVfIwJHp130w9UrqOEIba2sW4ipDfQ
      pKzs6pySBC1KfGMibIitr0NUsL/EM/urcmxn4+GXVzcEibzOcDiPJMHYUoEHsSLpgkGzR6XV
      a0IgWE5pDIfyXGy14rHJmJRHw8UnvlNP2Nh7u3cvh86tElxaI51cxdrWjhdAAgmp/AuPtqvf
      8NwKO/DhJGOLLe0IQBdyWQOkPlsGvRWtSvTRWoDY+loqfXnb91cFbxjPaXSzx0STW+XNHjtO
      i8LLbTaKumAqWuCrfQ5m40XePuUkUzDIawYBl4rHqmC3yBsppGKb/trPdexeDm2v59rbv8Ti
      wiIBv4f7g7fxNXViE2luD83Qf+4CslxutLKuaxc7zLPdERIb593yxUqZkeUt7UgSJA07FqmE
      hd2PT5uVOMOlckFheRsblewv6ZD6azsbj+c/S5KE01I+zqxKmFWJl9psCAG9/nIJF69dAcrH
      tHhNT5xLlqUt7Wj7UCDvOSm+rb0NgJcvX1n/TwP+1j2341gRMzw0yqt7em+jskpM95zYSNBm
      DCHx79LfplcNcc1299Dt16JAe2BR89OkruxIA7QZp5wnL8yUqJVLh/LgZbjYzQOt5Ujs1xxg
      DyzqfrrUyJ7ea5Y03HKGuL7zuj0vMhoqGWFlSa+r+NxnJ9QcYNdIhLQGWp6TB/wsmpU44Zoo
      DoA5LUCvKcia4SRzBOsjNQfYJZpQSAk7Xnnvub2taozFmiQCgLFiBy+ZpzhrmmOsdPh1n2oO
      sEuyohytsEs7r725mWYlTlCr5QcDjJU6GTDNct48w63C6UO3X3OAXRLSfTQrcfaz593DSNBJ
      J2tYWDFctChxzptmmNZa0MThfiVrDrBL5rUAbbvUAG3GLydYNVyUxMmOBM1pATrUJWRJYJOL
      eOQ0c9rhlluvOcAuCWn1O84C2w5ZEviUWo7w/VI3Z0wLG39fNk8wUuo61DbUHGCXLKyUdq0B
      2oqAssJy/uTmBwsBo8VOzpjmN/531jzHvWLfoYZDaw6wCzTdYCUep1HZ2yrw47Qo8RO9d1jC
      cJAXFgKP9WWrEqMkVNYM5zPeWVn2oAY1mBgZ5N79MfLZNW59eYfZ4DIrS4vcuTtIrnSwCQxH
      SSyRxa0tY5L2L/luVaInevfIaa2FLlP4ib5UJYNuNcxYaevixwfBHp4AEh1dPUiFHKuxCBld
      wum0E4kluXi2ndnZyIZib7MktiIclhx6C+ltKJYiIO1tBXgzrWqMxWjymRLiSnDkcuhtPpOx
      UgfnTTNP/f8l8ySDxaercpevpfJy6F07gCRJ5HMZBAaOQB9vvXqBualJJElCVhQwxEY+wEZe
      QCX17fDU+R/+VFJ2Lba4junQCu3KzqtAPAuXnCW7FiNfKG19LRVj674q26jsDWM3n8lUqZVT
      psWn/n/atMgDrQV9C7Hgdja2c7KdsIf9AYoEFyPokkoxGWMwtITb14hbKXD73hSnz13cQg5d
      uXDfM+W9FSzMKytPS5XDKxmuuHQqUe/bjIYpv0y2qGO3PbmbY2Xl0FtLiNdfrZidncihH5Iy
      bBQx0SA/PQS0ywX8SoIHWiunNznIdvLx/RRk3t4BhMH0+Aje5m7sNgtWc/lQSTZz7tKjTR0a
      /E0bvwd2vsPoscMwBPNLCX494IHd7dm3JbIk8LtUIitpGjz2/Z/wGDFW6uCUurjt/eqKeZyh
      YvdTDnAQbHurycVm+PzmDeZDISYXKvPYP87kixq6buC0VS502dpwMneRHy120m+e3/b1AdMs
      d4qnDyUcuq0DWL3NOMwmvvziFs2NNeXiSiqH1aJiUis3nOsMeFg8YZEgQ0iMlLo4o27vAAFl
      FRPaoSwUbusAhUSE9iu/wm988xViKyfrQ9qKYDRFm99dyWkGrX4XwVgF9ug6RkT0OsxS6ZkF
      xSQJuk1hhoo9B96ebR3A4gmwOPQJ7306hN9XE27NRdbobtp629e9Uu+ysZLc/y6Nx4kprY3T
      psXniglfMY8zVuo48GHQlg6gl/IM3R/GZLFgtZooFp9f//5FRgjB3HKCtsbKPpJddku5Alqu
      WNHzVisP5Q/nzc/fMbRDXeKB1krxgPdy39IBZMVEW2M9Zk8zr732GvWuk1nJ7HGWV9I0+ypf
      0Kql4eQMgwxkFnU/3Wr4ucc65TztyjLzB6wO3dIBJFnB4fJw99P3+Jv33mNpLXugjah2DEOQ
      yhWpc1b+RtDe6D4xkoi44cYilXBLO/s+nTdP82XhzIG2aUsHEIbGp59+Smf/ZX7z7/3ndPhP
      Xim/xwnGUjTWOVCUymsH2xs9zJ+QUOhwsYt+09yOAwkXzdNMlNoPdB6w5SdayqxiC/TyaoeZ
      4Ml4Oj+TheUE7Y0HEwho9btOzBNgrNRJv2n78Odm/EoCgcSyUdngw+NsPQcw21kcucn7t6f5
      +Z/9O2aXTsYdajtmwmv0NB/Mh9DudxOOpzGMI6gJcohoQuaB1kLPDsb/j3PWNMfQNuK4SrDl
      FFu1OPiN/+IfbfkGIQSxSBBNsdHkryMSCuL1N2MSRSLxJK3NgS31H8eZ+eUEr/QfTOEms0nB
      YlJI5Qp4HC9usGFOa6JOTmGXC7t632XLBO9k3+AbtlsH0q4tHUArZPnLP/sPpNbb+rXv/F26
      Ag9DgALFbCUyO0spE0Mze1ken8AkivjqnUyHLPS21h1IY48CwxCEYik6DmgIBI/WA15kBxgv
      tTNgmtv1+9rVZUJ6A2nDiu0A2rWlA0iSRO/pfoKhCCUdTKr82GsypXyK1WwRq9WgrStAMbkC
      2Ai0trA6FkVvcmMYBppWXj8QeuXWEYRg47xPv1a5YYSu6QhNYy2dR6JczFXTtMra0HWErtPa
      4GQuskb7erBB1yu3x4JhiG37q5Jy6O1sPNTrj5U6+a79412f1yqV6FLDzGsB6nUdtrCzn+Hj
      lg4gqxZOn71AU1MrmXwRj/2RXFcYRVZW0lgkA6vbxtDtO1jtLmxGmju3hmjsPo+iKMiyjKqW
      Ty/0yi1mSBIb591MsYJDL0VVUFSV1XSBJp9rw2apkjaUso3OpjpC8fSj69pWvrx7ZFnatr8q
      KYfezoYmyxSEibju3nMxgQHTLDcL/VxRlC3t6PuoUbP1E0CWUfJR/vLP/hRzXTtvXKtjoGNd
      ECeZODMwgJAkZEmitaUdaV2/bhgCeT8Fc6qQhaXkgQ5/oLwYdntyd5PD40RI9+FX1vZUTh7g
      gnmGD/IvV7hVZbYNbKtmO2+8/cuYhI7F9OiO9DDzS1lPepEVBUmS1hMv5BdyAtzZdLAO0Oxz
      El3NoFc4TbFaGC517yr+vxmfkkRDIaLXV7ZhPMMBEvEIOJv5xi9dolDY3cz9RUEIwWxk7cCf
      AA6rmaKmUyy9mPurjZc6nqj/sxeumCcYXql8kGBbB1jLlIjNjTEbL9LVcjLzAUqaQSpboLHO
      caB2zCaFBo+DcHzvBXerlaRhJ6Z79l1M7A3LMO/fmq749ljbOkBHexuLU0M4vT6Cy/uvg3Mc
      SWTyKLKMzXKwikSA9oCbmfDOd50/LoyXOug1BfddSqZJWUGLPSCWqKwubVsHkGQFGYOPPvwI
      1WTZ7rAXmoXlJG2N7kOZ17T73YTiL57uZDDTxIUdyJ+fhyTBeb/GvQe725r2eWztAMJgamqW
      U69+k1/92kvwgi/Tb8dsZI12/+HU72zzv3iqUN0wGFtc29MC2FZc6mvi5mioosOgrcVw2TUW
      1vIo8SneGwzR2ngy1aCL0STdLYezqt1U72R5dfs0weNIdC2LPTWFa4fy5+dxus3H0mq6osGC
      bYZAMgsT97gzPk1uJUwo9uJNznbCYjRJU/3h1Kn0OK1oukGusLdYeTUyuRinV5qpWB61zaLi
      9zoYm9/79lSb2XJ2Z3J4+S//yX9XMSPHEU0zSGYKh1qzp9HrILKS5kUpr3R/OsqF+hJUMIr+
      xrk2hqaXudTX9PyDd8BzMzxCU/eYjrxYY9OdEI6nafQ6UA8gCWY7Wv0ugtEXYyKs6QaTwTh9
      bZVdvOrvbOCLsWDF5gHbxvf0QoqPfnGDkmFg90JX4CKyJCGEYH56gnRJ4VRXIyMj03gDLdRb
      BbPhFfr7z2BWD+9Lc1CE4ilaDzkTrr3Rw2I0CS/AlCu6lkVVZDwOC5UsqdDic2Ezm4iuZSuy
      PrPtN7W4FkLyttPX6iM6PcTs2qPL8Dd3YC5lWY4ssFqA+joPC6Eo/d0+pueWN7yz8oVeeeK8
      B1dQtlwGpb3Rc6A2NheubfU/rBRXWTuH0V+bzz30YImBTn/FQ8hCCPo7fHw5HqrIdWxfF8jX
      QTY0yt3xIGdfeo2A65EeaDk4g9nXTGvnANdeO8/EyDCyqmKy2kErbZSt1nUdXdfRKiyHfnje
      zT+V/FAXo0naGpwHakPXjSfO3VRnJxhLommVlUNv11+VdLTN5749EeJiT2NFy7A/PPdrA60M
      TkXQtPLfFZdDA2iFPAZgd9jxt7bjWB/WCCPPQjCKpx5WzDqLwSUcXl+5OvSdMXoGLh17ObQu
      JBZiGTqb6p6ydRBy6Ie47GWFbUEzKrZ1z1HIoTXNYH45SX+nHzkoV6KYNlDuL1VV6W31EYyn
      KZQMnHZz5eXQUE58EYZBJpWgUHx0CbJi461rb2/87Wt4NBtv7d5zO6qKnLAg2+qwW02Hatek
      yljNKol0geOcU7cQTeD3OrBbTex9N+XtMasynQEPM5E1LvQ07utc295oZLONK1euUOd2HMg4
      vppZMdx4fY2HGgGCstS8vdHNQvR4R91G52Kc7z64jcAlSeLq2VY+H9l/+fQtP2Etl+T//Dd/
      wNDoJCXVQbPvYNWQ1cai5qet0XMkuQ3tjZ5jHwodnlnmQs/BVnTr72hgaHrpYCbBitXJN79+
      jUxihbnpCZbXTlYB10XdT88hSSA20+Y/3nsG5AolFqMpug6ojMxD/F47VrOJpZX9yUe2SYqX
      6em/SE//RYShb7lf04uKEBDSGnjriKrhNfmcLOUUhLOiOz4dGovRFA0e2xNZhAeBJEm8dKqJ
      z0eDfGsf/fTcQa4kK4c+Fj5q4oabBuvRVMSuc1pJm5srvBJweNx7EGGgq/Lx/614tb+FwX3K
      o0/WN3sHFDBREGbc0tEoMy1mFYe7nlXj+C0HCyEYnFriXNf+IjM7pa+1nsVokkRm72KjmgNs
      IqLV06TEkaSjuwe3N3oI6gcXRTkoSprB8lqG7gMe/z/O2c4GHgT3nrFYc4BNzOuBfeev7pdW
      v4ug1nCkbdgLE4txupvrsJgPPoX0IZdPN/PFwt6HqzUH2MSi5qdNOVoHaPe7COvHrxDB8EyU
      S70HG/7czPnuRubkXjSxt69yzQE2saj5aVbiR9qGZnPy2DmAEGI9/n844/+H1LmsOJtP77m/
      9uAAglwmyWoihRCCtdUVipqBXiqyspo41qvGupBYNuqOfAgUUFaJ6R70Pd7VjoJUtshqKk/r
      IeVQP0SSJM63WPe8o+SuB2tCCJaXo6zGVskEvCSLCqVgFIvIYbaoJAsddDUdbidUioThxCYV
      9l3CY7/ICDxyhjXDiU85HotiD0IrdLcc3uT3cV6yL/Dvi918x/75rt+7aweQJFD2eQEAABeF
      SURBVAmvy04ip1NMa3Sf7WNubBSw0XOqnbGxKLrfcSyrQ0cND41KOaLwsDp0pW08jq5vbUPX
      dfzKGlHds28HOKzq0HcnIwx0NDxlq9Jy6K2qQ7fKEWKGl6Rhxy3vLgF/1w5g6EXuDo7T3XcK
      u1pkcmwCYShYRZbx0QlsDb3HVg49rwVoV5aBR9WhN3OQcujHXqBZiRPWffSzv5KChyGHNgzB
      8GyUb77S+5QtTa68HHozugxnTPOMl9p51TK+q3Pu/gkgm3j58ksYSLg8bmzuNBabAxmdTK6I
      03F4SeSVJqz5OGuuTA2b/dKmRpkoHY/0+FRBomTSCdQfnWjyJfMkt4und+0Au55lSZKM2+vF
      6/WgSBIOpwtVkZEVEy6n49hWhxYCFvRGWpXKldzYD81KnKDWcOA7pVeCiVILZzoaMKkHq/95
      FmdMCzwotVIUu2vD8QkzHDAlVPLCjFeujhpIXjlNUtjROLov1U4ZL3Ucevx/Mw4pT72cZFHb
      XRi25gDrpAwbEgKrVDzqpgBgl/IIIZET5qNuyjMRAqZFN2faj3blWpLgnHl21+HQmgOsE9Hr
      aVbiyEeoAXocRRL4lCRR/WhCiztlzXCiKTYavEc/97tknuJ+qXtXw8aaA6wzrwVoP+IFsM20
      KtGqF8VNlNo5ZQoedTOA8gJiwnCQFTuvZl5zgHUW9cYj1wBtpk2NVr0obrjUxdkKVX/eLyZJ
      54J5msFdbKxdc4B1lvS6I9cAbaZZibN0APtiVQpNyEyW2jhl2n9yeqU4b5rhXrFvx8fXHICy
      BqgsO6iuagx+JcFyFc8BlvU6rFIRt1w9Zd0HzHPMaM0Uxc6WuGoOAER1L145jSpV1y6NbjmL
      jkLWqM4deiZK7ZwxzSNVUQKnRSrRpMSZ0XZWPbrmAJQjQE3KylE3Y0v8yipRo/qeAkLAaKmD
      8+aZo27KUwyYdh4O3ZMDGLpGsaQjDJ3E2hqZbB5DL5FKZ46lHHpBb6RTrezeU5WiWVkhpFVf
      boBAIqQ3VGW/XbZMMlLswthBNZNdO4AQBg+GbzE6FyazssjUfJRsvsDk6DCh+Unmo9Wxkrob
      gpqfliqRQGymWkOhMcODRSrhkquvZlSdnKKAmVXj+bv77EEOLdPd28fkch7F7EARayyGwtgU
      G/3963Jon/3YyKENAUG9gdZNawBHLYd+SLMaZyi387DeZg5KDj1Y7GHANLvx93Y2DkMOvbk6
      tCoZnDdNM1Lq4i1l6Jnn3ENCjEE8GmN1pUDA1UxDQwOR5RUQOtOT01jrOo6VHDonrJSEikN6
      sozrUcuhH9KsrBDWfBgC9lIE+aDk0CPFLr5p+3Lj7+1sHI4c+unrGDDP8mHuJd6yVtgBAFRH
      HX12cHrqEIk1LpwfQEUnkc5R5z1e9WxWDWc5AlSxj6my2KQCkmSQExYcUgU329oHRaEyqzXR
      YwofdVO25Yxpgf8n/U1KQnlmht+ehkA+/yPFna/h4UqlQn1ddQu3tiKoNdCsxKu2DKGKjkPK
      kzAcOOTqcIA5LUCjsopFqt4dLa1SiSZlhalSK2fN81seI0QtDEpQ99NRhZGMh0gStChxwnr1
      SCLGSx2cM88edTOey2XzBEOl7cOha4bzZDuAEOW72VFXgXgerWqUYJU4gBAwVurgnKn64v+b
      OW+eYajYw3Y7KL2be/WEOwASCcNJg1xdEojNNCtxQlUiissLMwnDQYtaXbqpraiXU5jQtlxI
      XNMd3C6ePtkOUEIlKyy7riRw2ASUVZZ1b1WkR4Z1Hz45ibWKx/8PkSXBWfMcw8Wn9+7669xV
      vmodPNkOsKx78SsJlCrTAG3GLWdICxuV2zpv7wwWexg4BuP/h5w3zXCneOqJm8eK7uRO8TRf
      t96ugh49Qua0JlqrLAdgKyyShl0qsFIFJdPHSx2cNu2vVMth0mMKE9M9FNcDnkLA3+Su8pb1
      Hna5cLIdIKT7aFeXj7oZO6JVjRE64nqhOcNM1PBWTeWMnWBZD4eOlToASAo7t4unuGa9C5zw
      MOi8Fjg2H2azEid8xKK48VI7HcrSkZeO3C1XLaMb84CfZV/nbes9nHJ55f/EOoAhqjMLbDuq
      QRQ3Vuo8FvH/zZwyLXK32Edcd3O7eJqvWW9vvHZiHSApHFikEja5OsqgPI8WNU7kCNMjjfX4
      /wXzgyNrw15pUJJ45Ax/mP4V3rbew/7YZ76n6tCzY3cpOVvprFO4Pz6Lp6EFm5EiEk/SM3CJ
      Ovvh7rC+F2K6h0Z571vrHDYNcoIVw40m5CPJXEsJBwIJn3w89zAOKKvcLPTzj10/feL/exLD
      Nbe0MLNSYim4Qv/Ll5kfH6OExOWX+xmfiuDua6l6OfSi5n/mYs52UuXDlkM/RJEMXFKWNcNJ
      wy4qRldKDl1eMV/eNmRcTXLorXBLGdrVZSybCp/tqTx6WZKqoSqCfL6EphvIQlDKZ0E1Icsy
      siyjPJT1KpWVQyvK1uUCd1OXdFFvpE/dvpqBoijIW9ipZO1TRZG3tME229I2KSss63W7cgBZ
      lrbtr93IoQeLvZx7TP+/me1syBWWQ29lZys59Ga+77gOPL338u4zwgyNqel50vElXM1dLE2P
      EWjtoL3Fz9hMnJ7Oxo0viSRJB1Is9+F5N//s+BoELGj+54ZA92NjZ2x3HVvbCSgre9oKaL/9
      ZQh4UGqh7xkFsPZrY6c8z8biaok7CzmEEHz8IMNqtux+sYzGu6MpfjqUJF3Q+WAijSHEXsqj
      q/RfeHnj74HzF9d/c3HRd7QFUneKhkJG2KqmEO5OaVVjjBY7D91uStjJCzM+ufp3q5FliCRL
      FLVyJY1ETqfOruB3qvzyGSe/mMqQLwlSeYNssRrW1o+AtGFDwaiaQrg7pW09FHrYmqCRYjd9
      pmDVS0YAWjwmJEnCYpJpcDw5XLq3mONiq5UGp4pFlbCZ5L1Ngo87Eb0en5JAqZJCuDvFLWdI
      G1ZKKJgPMYNtuNTJhSosf7IZIQSfzWSZXynyIFrg7mIeu1kmmdfpb7IiSeBzKEwsFZhbKTIa
      KZxMB5jXAnSpkaNuxq6xSQVkSVAQZszS4VRj0IXEVKmN/2x9ElnNSJLEmz0O3uwp71TT6y8P
      g1ayGiYZrnSUK1ifDlg4HSi/diKHQEG9gZZjsgL8OIokaJATLOl1h2YzZnhwyrmql4w/i3q7
      uu2E/EQ6wJJefyxUoFvRosYIHWJ22INSK31qdZQ/PwhOnAPoQiJmuI/N/rubaVViLGqHowkq
      CYXPC2c5Y9o6qfxF4MQ5wKrhwiNlMUuVW50+TFqV2J7WAnZLxrDw48zb3Cr2kxHWA7d3VJy4
      SXBY91VtIdydUK8kievuAzt/xrDwt7lX+LwwwFesQ/yv3v/72ORM7IUT5wCLmp+2Y/yBuuUs
      2nrJdHsF6wSlDSvX8y/zeeEsr5jH+Z+8f4xLzpHK64wsFbGoEv3rkZMH0SJ1DgWTIjEXL3Km
      w0mxWCSdTlNfX70bemzFiRgCCVEez44WO3gv98qu9pCqRgLKasUiQXnDxF9lr/Iv1n5ATpj5
      Hz3/gV91fLJR9NasSjS5VIbDZWebWykRSmpcn8iQKRi4rAofTKT54osv+PjjjyvSpsNkX0+A
      QjrGnftzNLW3Y9GShGIJ+gYu4rEdvRzaWN/1ZbjUxXCxm1mtCb+yRo8pxNljPqlrVuKEdR/d
      pr2vZaRzRf468wo/T57isnli446/GYsqU9Q1BposSJKE0yIzFy9iM8u4rQo/GUxyrtvBq1ev
      cv369X1c1dGwTwdIIhQFWZZYy2hcfuk0Y1NLuE49KYdmC3nvXnmWHFoTElOlVkaKXdwt9qEj
      c8q0yBvWYX6gvrur0oLGUcqhjWf3V4sS33GhLCGelEMXSjp/++UM79+aZqBg4p96/gSfsr3G
      XwgYjRT4O2edxDMasbSG16aQLBjMrxRp8aqE14rcvHmTwcFBXnnlFdxu92Pvr6Ac2jD2LIfe
      jn05gN3XzmuNCvfuDmI2m9CLRVAUJEl6Qg4ttpH37oXH5dCGEKSzRQanl7g9HmZy/AreUjOX
      LRP8Y9dPCSirW+pXbs5mSRYM3u5zoMjws+EUVpPMuWYLdxZyeGwKrps3Cefv09XVxeXLlx+z
      XzmF4xOS8ccQ8rP7q0WNMZjd2Q4oklSWQ2fzJd67Nc27Xzzg5dPN/C+//TbWP/nfoPD8BJdf
      7nciSRLLKY0zjRY6682oioQEdNSbsbncqC+9xKVLl7BarU9ck1bJ/pK27i9tL2Wz19mXAxSz
      SR7MBWloacelFBiejNA/cPYJOXSZynWCpsNUcIW7U0vcm4qQyhY51+3n9XNt/H3xR1iDHz3n
      /YKb8zn6AxYEoBsQT+t0N5QVg21eM5FkiW+8/jo3xpbo6ek5EFkvbC8Xl57TXy1KeTFMiKf1
      7ZvJFnTevzHJz25McbG3kR/+o2s01pWlAjvJ7ZIkUNeNnG0qh0Nt5kdGVUUCCRwOx3Zn2IGV
      nSFJW9+A9mNhf08Aj48LFx/FpL3+lv2cbkuEgLSwMlHq4FbhNA+S3fj/ZojLp5v4J//pFZrq
      nZhN5btCdkLakUSs1Wsi4FIJJ0q015n4B695+XwmSzStUe9QmI4V0DWdZDJJXd3hyQ52ik0q
      okoaGWHFuWlfAyj3WRETH+Uv8t7Ndi5cSvLPf+stmn1HX1eo2jjQMOitW7eYm5vj8vkz+IAb
      M1lCayW6fGZCiRJmVWKgycpgMIfPqfJaV1msVBIKEb2eu8VTjJfaWdLrOGua44plgn/YOk/D
      D/6rPbdJVcpRjcW1Er1+M4trJcYiBXQBJV0wFMrT5DYRWYrw2muvVagnKouMgVPKs2Y4N8p7
      PCRnmPm0cI73cq/QZwryP7+RofWbrxxRS6ufA3WAnp4ewuEwhUJ58vl6t52PpzJYTRKd9SbC
      SQ2nRcZlVQgV3fzb1K+gYjBRaqNeSXFKXeD7juu0KFFM62N5WTqz73a91l12tGzRwGaSaX9s
      X4OHv9tbW1GqNKYtSdCkxInoPtrUcl2jklD4rHCOd7NXOWVa5PfcP6ZJXcWk/L0jbm11c6AO
      YLVaOXXqFJH5KVqAoiYo6oL+Jgufz+aYXynxehecCVj4fMLGVP0ZftPxc37d8RFuKXPgm1bY
      zcd3GaRNjbKo+blknuKLwln+OneVHjXE73p+TKO8VrUbflQbB+oAQ0NDLC0tca7/FHf/OkeD
      ozzMMYzy3ffVThurOZ3RcIFvNWuc8f3LY1d17KhwSHk+Kr7EYLGHFjXOf+P6S1rU4yvxOCoO
      1AGuXr0KQCmboK7ZWo4YrPPLZx5tYdlZ/3AIUvvy75S0sBHW6/lnnj+hRw3V7vh75FC0QKqi
      PPHlr7F/vmG9xVet9zCj1b78++D4DoJfQAqFAl9++SUrK+WhjBCCkXCeXLFcwWAknEcIwUys
      yFKqhEWqffn3S4UcQBANznHr9l0yxdowZq/kcjmampp4/4PrCCEYDOYxBFyfzHB9Ik3JEPx8
      IkMwUeLGTJZ8qfqrNFQ7FXsCRBNZLl/oZn72+CWbVwsul4u7d+9is5ZXXDNFgz6/Get6CY9T
      fguGECwlNaIpnVzNAfZNBYdAgt3UmqzxNKFQCFVVSWXzLKc0/E6Vvx5JYQgoGYJ3R1J015vx
      ORQaXQpu63YlD2vslIpNghu9Dm4PzXL2/IVKnfLE0dbWRiAQgFM27v2b/48zAQtdPjOqzIZu
      SZWh02dGkcp1P2vsjwo5gERDSycNLYdftu9FQpIkzGYzmizTvy48W5c5IQHy+u+m2o2/Ykhi
      XeCezWYpFitXKlDX9cekqwKRfX4tfiHE85WXsoJk9Wx5vCikQH/29p07sgFINg9I67Jrw0Be
      lyiLYhq0Z/eTQKwrFJ9tR7K6QVafsoFeKl/Lc9jJtUiqBcyOp20AIrfK8+os7qi/JAnJVrdx
      fPlf6+8pZhDas/MwdvyZWFyglJOtnriWUg5Rel6hMIHgaaXthgNUmicd4GDQdR1Zlg9Mrvy4
      ncO4lhfBxsP9AOTn5DTsl0pdy4E5QI0axwHlhz/84Q8Py9jE6CDB8BK6kAjOzTB07y7OQBul
      lUXujs2wFF0lFpwiL9lZXJglm4hjcnj45PoHtHU0MjEZwd/geaaN2akxTHY3n354nebOFibH
      57FIWT74bIi+ng7Sa1HGxqcIRlcJz46zHIuSzMFSeA6/18rwVJTGhq3Kjgju3/mS8HIcLZ8h
      WVKYGvwU1dPK3PQEWi7J4PgsrQ0urv/iY5bDITxNHRQSS4xNPCAST+B3q/zVezfo7e1iZHSE
      Rr+XkeEp/I1bpzcuzo4xtbiGVFghp8tMTU4wMztPU0srqXiYTz4fpKu7jc8+/ID4ahxNtjE/
      P0Oj38fI8Bj+xucX0ApOjzM1F0SRJG7cvEk8EsbkdDEzOcGdu8N09XUzOz7E7GKQRFpnKbxI
      Y6OfkXs3CS/Hkc0OHDbzM23c/uITlqIJ7FaNT78Yo6hpqEaeTz6/R1d3B5KhMT46wvTUJIYu
      GJ6cYnFuAZNeYHAugkPLsKabcG1jZ2psFLvbzYfXP6azxcn47BrR6dtEdTdqbpn74w9IZDX8
      9R6mRodYXIrjccD4XOpwV4If5ofKqoUzZ8/S2NJOg9OCoqoYmo4ky1jdDWRXl9B0A5/bwVJk
      njp/M7MT83ian7//QMDrIBgJUVffSGhqCpvfTzCWodVfdhyntw5ZL2EyW5FkFY/HjTAMlhZn
      Gbw/Qq60fcEsm82KQMYX8JNaieFw1ZOKzSKpLpo7evHYy+N5i82Bw2rCMMDtrUPSipgtNhbm
      Qlw810l0LbsxVHhWPquQLTikPImcBqqtvPeabEKRwNvQTLPPAwjc9QEuvXSZZHyJ1Moyg4ND
      xJM7qeUpWMkUuPzSJRrrXZitdtwuO6rVzdkzXXR096ECiiyj6xqyqj7VbnkH6a42qxXZZEaV
      JYQoD488DU00NXjKgXNZpbu7E4vdhVUFhEDICjIKdXaJWCr/zAC712EmElqgvjHA5NQSTe0B
      +vr6kCVYXc1x6fIV5FIW0AiFltALWdK5AvPTE4frALLZwcC5czTWu1mLzONpakcC1mKrdJ8d
      wChkAInuVh+zwRhOn58Hw9OcOt3ObCSG3/HsOw2AzRcgODpGT38XE/NxAjadfC7L3NwcyWyR
      TCrHqfPnyaVWUVQzdb4mTnW34m/p4OL5ASzq9l1SH2ijq9nJbDhLaXUGS2MvscVFfIEGDMNA
      CIEQAqvNTnf/RTwWyGTynDl/gUwiTjQeYzW+QjgUQi8WyaWToD67REtbVzfB2Rm0Qpb61h4c
      SomCZiAMA0MIhCFACDJrUSSzHYe3gYsXL1Dn3Fk1N0VoJLJ5cvkCFrOJ1VQRh1liZnqBrp42
      ANaSOc4NDJBOxEEIDMPA4vRy7tw56l2259poau+m3lRgKVmgq+8MvZ2t8LC/DIEwioxOzNE/
      MIBZUek5cxafHXIlaGzvZGlx7pnn9wX8jI4F6e9qZCGexGOWEUa5j8wmwepagkJJAAp2t4ee
      9gDJdJa2rlOHOwdIrUaZCy7hC7TitKq4XOUUPUPXmJ1+QF1TO2ZZ4HA4WFpaIhAIEI1G8fsb
      iEbjNPgbdpT/+eg9MRoa/EgSpFIpXC4XxVyaB7PzNLd3owhtow2pVAqXw0YqW8Ll3OpDFaws
      h4kli/T1dpGIRXE1NJCIx/DW+wjPTbOWyRNoacdmMeF0lJNuCtkk07NBWjs7kQyBy+UglUph
      lg1mglF6e3swbXMXzeeymCw2kqsx7C4Pi7PT2LyNtDTWE4ssEomt4fEFkAoJirKd7o4W0qkU
      LpeTVCqDy+Xc8ryPY+glph88oLG1EwmBw6KQzGrlTfnW+6ZUyPBgZpHOnl5WwnOkizI+t4VI
      dIWmti4avM+2sxScI6OpdLb4GB+fwmR3U+eQiUTXcPsCtDd6mZycpGRIdHa0szA3h7M+QMDr
      QLJYyK2tYHJ5sZm2j9pHo1H8DfVEY2vU1zmZmphEEzK9p04Tnp+lubMHq0mmmE0yF1mjt7OJ
      TF7UJsE1TjY1NWiNE03NAWqcaGoOUONE8/8DtWLYdcHtcAEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 20 Laptops' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
